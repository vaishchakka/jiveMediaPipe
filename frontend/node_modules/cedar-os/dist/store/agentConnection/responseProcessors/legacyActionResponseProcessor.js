"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/store/agentConnection/responseProcessors/legacyActionResponseProcessor.ts
var legacyActionResponseProcessor_exports = {};
__export(legacyActionResponseProcessor_exports, {
  legacyActionResponseProcessor: () => legacyActionResponseProcessor
});
module.exports = __toCommonJS(legacyActionResponseProcessor_exports);
var legacyActionResponseProcessor = {
  type: "action",
  namespace: "default",
  execute: async (obj, store) => {
    const args = "args" in obj && Array.isArray(obj.args) ? obj.args : [];
    store.executeStateSetter({
      key: obj.stateKey,
      setterKey: obj.setterKey,
      options: { isDiff: true },
      args
    });
    store.addMessage(obj);
  },
  validate: (obj) => obj.type === "action" && "stateKey" in obj && "setterKey" in obj && typeof obj.stateKey === "string" && typeof obj.setterKey === "string"
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  legacyActionResponseProcessor
});
//# sourceMappingURL=legacyActionResponseProcessor.js.map