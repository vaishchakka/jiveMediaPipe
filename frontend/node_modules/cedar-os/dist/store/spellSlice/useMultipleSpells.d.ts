import { UseSpellOptions } from './useSpell.js';
import './SpellTypes.js';

interface UseMultipleSpellsOptions {
    /** Array of spell configurations to register */
    spells: UseSpellOptions[];
}
/**
 * Hook for registering multiple spells at once.
 * This solves the "hooks in loops" problem when you need to register
 * a dynamic number of spells based on an array.
 *
 * @example
 * ```tsx
 * const spellConfigs = items
 *   .filter(item => item.shortcut)
 *   .map(item => ({
 *     id: `item-${item.id}`,
 *     activationConditions: { events: [item.shortcut] },
 *     onActivate: () => item.action()
 *   }));
 *
 * useMultipleSpells({ spells: spellConfigs });
 * ```
 */
declare function useMultipleSpells({ spells }: UseMultipleSpellsOptions): void;

export { type UseMultipleSpellsOptions, useMultipleSpells };
