{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import axios from'axios';import'./RealtimeScorer.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RealtimeScorer=_ref=>{let{isGameStarted,poseData}=_ref;const[totalScore,setTotalScore]=useState(0);const[currentPoints,setCurrentPoints]=useState(0);const[pointGain,setPointGain]=useState(null);const[showPointGain,setShowPointGain]=useState(false);const[accuracy,setAccuracy]=useState(0);const[frameCount,setFrameCount]=useState(0);// Send pose data to backend for scoring every 0.5 seconds\nconst sendPoseForScoring=useCallback(async poseData=>{if(!isGameStarted||!poseData)return;try{const response=await axios.post('http://localhost:5000/api/compare-pose',{live_pose:poseData});const{points_earned,similarity,message}=response.data;// Update scores\nsetCurrentPoints(points_earned);setTotalScore(prev=>prev+points_earned);setFrameCount(prev=>prev+1);// Calculate accuracy\nconst newAccuracy=frameCount>0?(totalScore+points_earned)/(frameCount+1):points_earned;setAccuracy(Math.round(newAccuracy));// Show point gain animation\nif(points_earned>0){setPointGain(points_earned);setShowPointGain(true);// Hide point gain after animation\nsetTimeout(()=>{setShowPointGain(false);},1000);}console.log(\"\\uD83C\\uDFAF Score: \".concat(points_earned,\" points (\").concat(similarity.toFixed(1),\"% similarity) - \").concat(message));}catch(error){console.error('❌ Error scoring pose:',error);}},[isGameStarted,totalScore,frameCount]);// Process pose data when it changes\nuseEffect(()=>{if(poseData&&isGameStarted){sendPoseForScoring(poseData);}},[poseData,isGameStarted,sendPoseForScoring]);// Reset scores when game resets\nuseEffect(()=>{if(!isGameStarted){setTotalScore(0);setCurrentPoints(0);setPointGain(null);setShowPointGain(false);setAccuracy(0);setFrameCount(0);}},[isGameStarted]);return/*#__PURE__*/_jsxs(\"div\",{className:\"realtime-scorer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"total-score\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"score-label\",children:\"Total Score\"}),/*#__PURE__*/_jsx(\"div\",{className:\"score-value\",children:totalScore})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-score\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"score-label\",children:\"Current\"}),/*#__PURE__*/_jsx(\"div\",{className:\"score-value\",children:currentPoints})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"accuracy\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"score-label\",children:\"Accuracy\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-value\",children:[accuracy,\"%\"]})]})]}),showPointGain&&pointGain>0&&/*#__PURE__*/_jsx(\"div\",{className:\"point-gain-animation\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"point-gain-text\",children:[\"+\",pointGain]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"scoring-info\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83C\\uDFAF Real-time pose scoring active\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDC83 Follow the reference video closely!\"})]})]});};export default RealtimeScorer;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}