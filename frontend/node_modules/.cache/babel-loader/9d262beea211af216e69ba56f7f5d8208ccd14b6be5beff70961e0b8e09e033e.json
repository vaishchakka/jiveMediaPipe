{"ast":null,"code":"import React,{useRef,useEffect,useState,useCallback}from'react';import{Pose}from'@mediapipe/pose';import{Camera}from'@mediapipe/camera_utils';import'./LiveDance.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LiveDance=_ref=>{let{isGameStarted,isPaused,onPoseDetected}=_ref;const videoRef=useRef(null);const canvasRef=useRef(null);const[isStreaming,setIsStreaming]=useState(false);const[error,setError]=useState(null);const[poseStatus,setPoseStatus]=useState('Webcam Ready');// Removed unused currentPose state\n// Real MediaPipe pose detection\nconst detectPose=useCallback(results=>{if(!canvasRef.current||!results.poseLandmarks){console.log('⚠️ No canvas or landmarks available');return;}const canvas=canvasRef.current;const ctx=canvas.getContext('2d');// Clear canvas\nctx.clearRect(0,0,canvas.width,canvas.height);const landmarks=results.poseLandmarks;console.log('🎯 Drawing pose with',landmarks.length,'landmarks');// Create pose data for scoring\nconst poseData={kp:landmarks.map(landmark=>[landmark.x,landmark.y,landmark.z,landmark.visibility]),timestamp:Date.now()};// Send pose data for scoring if callback provided\nif(onPoseDetected){onPoseDetected(poseData);}// Pose connections for drawing skeleton\nconst POSE_CONNECTIONS=[[11,12],[11,13],[13,15],[12,14],[14,16],// Arms\n[11,23],[12,24],[23,24],// Torso\n[23,25],[25,27],[24,26],[26,28],// Legs\n[15,17],[15,19],[15,21],[16,18],[16,20],[16,22],// Hands\n[27,29],[27,31],[28,30],[28,32]// Feet\n];// Draw connections\nctx.strokeStyle='#00ff88';ctx.lineWidth=3;ctx.lineCap='round';POSE_CONNECTIONS.forEach(_ref2=>{let[startIdx,endIdx]=_ref2;const start=landmarks[startIdx];const end=landmarks[endIdx];if(start&&end&&start.visibility>0.5&&end.visibility>0.5){ctx.beginPath();ctx.moveTo(start.x*canvas.width,start.y*canvas.height);ctx.lineTo(end.x*canvas.width,end.y*canvas.height);ctx.stroke();}});// Draw landmarks\nctx.fillStyle='#00ff88';landmarks.forEach(landmark=>{if(landmark.visibility>0.5){ctx.beginPath();ctx.arc(landmark.x*canvas.width,landmark.y*canvas.height,4,0,2*Math.PI);ctx.fill();}});setPoseStatus('Pose Detected');},[onPoseDetected]);const startCamera=useCallback(async()=>{try{setError(null);console.log('🎯 Starting camera with MediaPipe...');// Check if MediaPipe is available\nif(typeof Pose==='undefined'||typeof Camera==='undefined'){throw new Error('MediaPipe not loaded. Please refresh the page.');}// Initialize MediaPipe Pose\nconst poseInstance=new Pose({locateFile:file=>{return\"https://cdn.jsdelivr.net/npm/@mediapipe/pose/\".concat(file);}});poseInstance.setOptions({modelComplexity:1,smoothLandmarks:true,enableSegmentation:false,smoothSegmentation:false,minDetectionConfidence:0.5,minTrackingConfidence:0.5});poseInstance.onResults(detectPose);// Initialize camera\nconst cameraInstance=new Camera(videoRef.current,{onFrame:async()=>{await poseInstance.send({image:videoRef.current});},width:640,height:480});await cameraInstance.start();setIsStreaming(true);setPoseStatus('Webcam Active - Pose Detection Ready');console.log('✅ Camera started successfully!');}catch(err){setError(\"Camera error: \".concat(err.message));console.error('❌ Camera error:',err);}},[detectPose]);// Auto-start camera when game starts\nuseEffect(()=>{if(isGameStarted&&!isStreaming){console.log('🎮 Game started - auto-starting camera...');startCamera();}},[isGameStarted,isStreaming,startCamera]);// Auto-stop camera when game stops\nuseEffect(()=>{if(!isGameStarted&&isStreaming){console.log('🛑 Game stopped - camera will be available when game restarts');setIsStreaming(false);setPoseStatus('Webcam Ready');}},[isGameStarted,isStreaming]);// Cleanup on unmount\nuseEffect(()=>{return()=>{// Cleanup MediaPipe instances when component unmounts\nconsole.log('🧹 Cleaning up MediaPipe instances...');};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"live-dance\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"panel-title\",children:\"Your Dance\"}),/*#__PURE__*/_jsx(\"div\",{className:\"video-status\",children:poseStatus}),/*#__PURE__*/_jsxs(\"div\",{className:\"video-container\",children:[/*#__PURE__*/_jsx(\"video\",{ref:videoRef,className:\"live-video-element\",autoPlay:true,playsInline:true,muted:true}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"pose-overlay\"}),!isStreaming&&/*#__PURE__*/_jsx(\"div\",{className:\"camera-placeholder\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"placeholder-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"camera-icon\",children:\"\\uD83D\\uDCF9\"}),/*#__PURE__*/_jsx(\"p\",{children:isGameStarted?'Starting camera...':'Camera will start automatically when you begin the game'})]})})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"camera-error\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u26A0\\uFE0F \",error]}),/*#__PURE__*/_jsx(\"p\",{children:\"Make sure to allow camera access when prompted.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"video-info\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83C\\uDFA5 Camera starts automatically when you begin the game\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDC83 Dance along with the reference video!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83C\\uDFAF Real-time pose detection with MediaPipe\"})]})]});};export default LiveDance;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}