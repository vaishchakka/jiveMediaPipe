{"ast":null,"code":"var _jsxFileName = \"/Users/vaishnavichakka/tempProj/frontend/src/components/RealtimeScorer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './RealtimeScorer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealtimeScorer = ({\n  isGameStarted,\n  poseData,\n  onGameEnd,\n  onScoreUpdate\n}) => {\n  _s();\n  const [totalScore, setTotalScore] = useState(0);\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [pointGain, setPointGain] = useState(null);\n  const [showPointGain, setShowPointGain] = useState(false);\n  const [accuracy, setAccuracy] = useState(0);\n  const [frameCount, setFrameCount] = useState(0);\n  const [gameStartTime, setGameStartTime] = useState(null);\n\n  // Send pose data to backend for scoring every 1 second\n  const sendPoseForScoring = useCallback(async poseData => {\n    if (!isGameStarted || !poseData) {\n      console.log('⚠️ Not sending pose - game not started or no pose data');\n      return;\n    }\n    console.log(`📊 Sending pose for scoring: ${poseData.kp.length} landmarks`);\n    console.log('📊 Pose data sample:', poseData.kp.slice(0, 3)); // Show first 3 landmarks\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/compare-pose', {\n        live_pose: poseData\n      });\n      const {\n        points_earned,\n        similarity,\n        message\n      } = response.data;\n      console.log(`🎯 Received: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n\n      // Update scores\n      setCurrentPoints(points_earned);\n      const newTotalScore = totalScore + points_earned;\n      setTotalScore(newTotalScore);\n      setFrameCount(prev => prev + 1);\n\n      // Notify parent of score update\n      if (onScoreUpdate) {\n        onScoreUpdate(newTotalScore);\n      }\n\n      // Calculate accuracy\n      const newAccuracy = frameCount > 0 ? (totalScore + points_earned) / (frameCount + 1) : points_earned;\n      setAccuracy(Math.round(newAccuracy));\n\n      // Show point gain animation\n      if (points_earned > 0) {\n        setPointGain(points_earned);\n        setShowPointGain(true);\n\n        // Hide point gain after animation\n        setTimeout(() => {\n          setShowPointGain(false);\n        }, 1000);\n      }\n      console.log(`🎯 Score: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n    } catch (error) {\n      console.error('❌ Error scoring pose:', error);\n    }\n  }, [isGameStarted, totalScore, frameCount, onScoreUpdate]);\n\n  // Process pose data with proper interval (every 1 second instead of every frame)\n  useEffect(() => {\n    if (poseData && isGameStarted) {\n      console.log('🎯 Starting pose scoring interval with pose data:', poseData.kp.length, 'landmarks');\n\n      // Send pose for scoring every 1 second\n      const interval = setInterval(() => {\n        console.log('🎯 Interval triggered - sending pose for scoring');\n        sendPoseForScoring(poseData);\n      }, 1000);\n      return () => {\n        console.log('🎯 Clearing pose scoring interval');\n        clearInterval(interval);\n      };\n    } else {\n      console.log('⚠️ Not starting pose scoring - missing poseData or game not started');\n    }\n  }, [poseData, isGameStarted, sendPoseForScoring]);\n\n  // Reset scores when game resets\n  useEffect(() => {\n    if (!isGameStarted) {\n      setTotalScore(0);\n      setCurrentPoints(0);\n      setPointGain(null);\n      setShowPointGain(false);\n      setAccuracy(0);\n      setFrameCount(0);\n      setGameStartTime(null);\n    } else {\n      // Set game start time when game begins\n      setGameStartTime(Date.now());\n    }\n  }, [isGameStarted]);\n\n  // Game timer - end game after 10 seconds (to match short video)\n  useEffect(() => {\n    if (isGameStarted && gameStartTime && onGameEnd) {\n      const gameDuration = 10000; // 10 seconds (reduced from 30)\n      const timer = setTimeout(() => {\n        console.log('⏰ Game time up! Ending game...');\n        onGameEnd(totalScore);\n      }, gameDuration);\n      return () => clearTimeout(timer);\n    }\n  }, [isGameStarted, gameStartTime, totalScore, onGameEnd]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"realtime-scorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Total Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: totalScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: currentPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accuracy\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: [accuracy, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), showPointGain && pointGain > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"point-gain-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"point-gain-text\",\n        children: [\"+\", pointGain]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoring-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDFAF Real-time pose scoring active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDC83 Follow the reference video closely!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(RealtimeScorer, \"/AyJ106MsskkAjWiEgu4HHF19hM=\");\n_c = RealtimeScorer;\nexport default RealtimeScorer;\nvar _c;\n$RefreshReg$(_c, \"RealtimeScorer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","RealtimeScorer","isGameStarted","poseData","onGameEnd","onScoreUpdate","_s","totalScore","setTotalScore","currentPoints","setCurrentPoints","pointGain","setPointGain","showPointGain","setShowPointGain","accuracy","setAccuracy","frameCount","setFrameCount","gameStartTime","setGameStartTime","sendPoseForScoring","console","log","kp","length","slice","response","post","live_pose","points_earned","similarity","message","data","toFixed","newTotalScore","prev","newAccuracy","Math","round","setTimeout","error","interval","setInterval","clearInterval","Date","now","gameDuration","timer","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vaishnavichakka/tempProj/frontend/src/components/RealtimeScorer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './RealtimeScorer.css';\n\nconst RealtimeScorer = ({ isGameStarted, poseData, onGameEnd, onScoreUpdate }) => {\n  const [totalScore, setTotalScore] = useState(0);\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [pointGain, setPointGain] = useState(null);\n  const [showPointGain, setShowPointGain] = useState(false);\n  const [accuracy, setAccuracy] = useState(0);\n  const [frameCount, setFrameCount] = useState(0);\n  const [gameStartTime, setGameStartTime] = useState(null);\n\n  // Send pose data to backend for scoring every 1 second\n  const sendPoseForScoring = useCallback(async (poseData) => {\n    if (!isGameStarted || !poseData) {\n      console.log('⚠️ Not sending pose - game not started or no pose data');\n      return;\n    }\n\n    console.log(`📊 Sending pose for scoring: ${poseData.kp.length} landmarks`);\n    console.log('📊 Pose data sample:', poseData.kp.slice(0, 3)); // Show first 3 landmarks\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/compare-pose', {\n        live_pose: poseData\n      });\n\n      const { points_earned, similarity, message } = response.data;\n      console.log(`🎯 Received: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n      \n      // Update scores\n      setCurrentPoints(points_earned);\n      const newTotalScore = totalScore + points_earned;\n      setTotalScore(newTotalScore);\n      setFrameCount(prev => prev + 1);\n      \n      // Notify parent of score update\n      if (onScoreUpdate) {\n        onScoreUpdate(newTotalScore);\n      }\n      \n      // Calculate accuracy\n      const newAccuracy = frameCount > 0 ? (totalScore + points_earned) / (frameCount + 1) : points_earned;\n      setAccuracy(Math.round(newAccuracy));\n      \n      // Show point gain animation\n      if (points_earned > 0) {\n        setPointGain(points_earned);\n        setShowPointGain(true);\n        \n        // Hide point gain after animation\n        setTimeout(() => {\n          setShowPointGain(false);\n        }, 1000);\n      }\n      \n      console.log(`🎯 Score: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n      \n    } catch (error) {\n      console.error('❌ Error scoring pose:', error);\n    }\n  }, [isGameStarted, totalScore, frameCount, onScoreUpdate]);\n\n  // Process pose data with proper interval (every 1 second instead of every frame)\n  useEffect(() => {\n    if (poseData && isGameStarted) {\n      console.log('🎯 Starting pose scoring interval with pose data:', poseData.kp.length, 'landmarks');\n      \n      // Send pose for scoring every 1 second\n      const interval = setInterval(() => {\n        console.log('🎯 Interval triggered - sending pose for scoring');\n        sendPoseForScoring(poseData);\n      }, 1000);\n\n      return () => {\n        console.log('🎯 Clearing pose scoring interval');\n        clearInterval(interval);\n      };\n    } else {\n      console.log('⚠️ Not starting pose scoring - missing poseData or game not started');\n    }\n  }, [poseData, isGameStarted, sendPoseForScoring]);\n\n  // Reset scores when game resets\n  useEffect(() => {\n    if (!isGameStarted) {\n      setTotalScore(0);\n      setCurrentPoints(0);\n      setPointGain(null);\n      setShowPointGain(false);\n      setAccuracy(0);\n      setFrameCount(0);\n      setGameStartTime(null);\n    } else {\n      // Set game start time when game begins\n      setGameStartTime(Date.now());\n    }\n  }, [isGameStarted]);\n\n  // Game timer - end game after 10 seconds (to match short video)\n  useEffect(() => {\n    if (isGameStarted && gameStartTime && onGameEnd) {\n      const gameDuration = 10000; // 10 seconds (reduced from 30)\n      const timer = setTimeout(() => {\n        console.log('⏰ Game time up! Ending game...');\n        onGameEnd(totalScore);\n      }, gameDuration);\n\n      return () => clearTimeout(timer);\n    }\n  }, [isGameStarted, gameStartTime, totalScore, onGameEnd]);\n\n  return (\n    <div className=\"realtime-scorer\">\n      <div className=\"score-display\">\n        <div className=\"total-score\">\n          <div className=\"score-label\">Total Score</div>\n          <div className=\"score-value\">{totalScore}</div>\n        </div>\n        \n        <div className=\"current-score\">\n          <div className=\"score-label\">Current</div>\n          <div className=\"score-value\">{currentPoints}</div>\n        </div>\n        \n        <div className=\"accuracy\">\n          <div className=\"score-label\">Accuracy</div>\n          <div className=\"score-value\">{accuracy}%</div>\n        </div>\n      </div>\n\n      {/* Point Gain Animation */}\n      {showPointGain && pointGain > 0 && (\n        <div className=\"point-gain-animation\">\n          <div className=\"point-gain-text\">\n            +{pointGain}\n          </div>\n        </div>\n      )}\n\n      <div className=\"scoring-info\">\n        <p>🎯 Real-time pose scoring active</p>\n        <p>💃 Follow the reference video closely!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default RealtimeScorer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}