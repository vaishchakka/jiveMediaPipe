{"ast":null,"code":"var _jsxFileName = \"/Users/vaishnavichakka/tempProj/frontend/src/components/PoseComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './PoseComparison.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PoseComparison = ({\n  referencePoses\n}) => {\n  _s();\n  const [isTracking, setIsTracking] = useState(false);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  const [sessionScores, setSessionScores] = useState([]);\n  const [feedback, setFeedback] = useState('');\n  const [similarity, setSimilarity] = useState(0);\n  const [sessionStats, setSessionStats] = useState({\n    totalFrames: 0,\n    averageSimilarity: 0,\n    bestScore: 0,\n    worstScore: 0\n  });\n  const scoreHistoryRef = useRef([]);\n  const frameCountRef = useRef(0);\n\n  // Compute joint angles from MediaPipe landmarks\n  const computeJointAngles = landmarks => {\n    if (!landmarks || landmarks.length < 33) {\n      return {\n        elbow_L: 0,\n        elbow_R: 0,\n        knee_L: 0,\n        knee_R: 0\n      };\n    }\n\n    // MediaPipe pose landmark indices\n    const L_SHOULDER = 11,\n      L_ELBOW = 13,\n      L_WRIST = 15;\n    const R_SHOULDER = 12,\n      R_ELBOW = 14,\n      R_WRIST = 16;\n    const L_HIP = 23,\n      L_KNEE = 25,\n      L_ANKLE = 27;\n    const R_HIP = 24,\n      R_KNEE = 26,\n      R_ANKLE = 28;\n    const computeAngle = (p1_idx, p2_idx, p3_idx) => {\n      const p1 = landmarks[p1_idx].slice(0, 3); // x, y, z\n      const p2 = landmarks[p2_idx].slice(0, 3);\n      const p3 = landmarks[p3_idx].slice(0, 3);\n      const v1 = [p1[0] - p2[0], p1[1] - p2[1], p1[2] - p2[2]];\n      const v2 = [p3[0] - p2[0], p3[1] - p2[1], p3[2] - p2[2]];\n      const dot = v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n      const norm1 = Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]);\n      const norm2 = Math.sqrt(v2[0] * v2[0] + v2[1] * v2[1] + v2[2] * v2[2]);\n      if (norm1 === 0 || norm2 === 0) return 0;\n      const cosAngle = Math.max(-1, Math.min(1, dot / (norm1 * norm2)));\n      return Math.acos(cosAngle);\n    };\n    return {\n      elbow_L: computeAngle(L_SHOULDER, L_ELBOW, L_WRIST),\n      elbow_R: computeAngle(R_SHOULDER, R_ELBOW, R_WRIST),\n      knee_L: computeAngle(L_HIP, L_KNEE, L_ANKLE),\n      knee_R: computeAngle(R_HIP, R_KNEE, R_ANKLE)\n    };\n  };\n\n  // Compute cosine similarity between two angle vectors\n  const computeCosineSimilarity = (angles1, angles2) => {\n    const joints = ['elbow_L', 'elbow_R', 'knee_L', 'knee_R'];\n    const vec1 = joints.map(joint => angles1[joint] || 0);\n    const vec2 = joints.map(joint => angles2[joint] || 0);\n    const dot = vec1.reduce((sum, val, i) => sum + val * vec2[i], 0);\n    const norm1 = Math.sqrt(vec1.reduce((sum, val) => sum + val * val, 0));\n    const norm2 = Math.sqrt(vec2.reduce((sum, val) => sum + val * val, 0));\n    if (norm1 === 0 || norm2 === 0) return 0;\n    const cosSim = dot / (norm1 * norm2);\n    return Math.max(0, Math.min(1, (cosSim + 1) / 2)); // Map to [0, 1]\n  };\n\n  // Calculate score based on similarity\n  const calculateScore = similarity => {\n    // Scoring system: \n    // 0.9+ = 100 points (excellent)\n    // 0.8-0.9 = 80-99 points (very good)\n    // 0.7-0.8 = 60-79 points (good)\n    // 0.6-0.7 = 40-59 points (fair)\n    // 0.5-0.6 = 20-39 points (poor)\n    // <0.5 = 0-19 points (very poor)\n\n    if (similarity >= 0.9) return 100;\n    if (similarity >= 0.8) return Math.round(80 + (similarity - 0.8) * 200);\n    if (similarity >= 0.7) return Math.round(60 + (similarity - 0.7) * 200);\n    if (similarity >= 0.6) return Math.round(40 + (similarity - 0.6) * 200);\n    if (similarity >= 0.5) return Math.round(20 + (similarity - 0.5) * 200);\n    return Math.round(similarity * 40);\n  };\n\n  // Get feedback based on similarity\n  const getFeedback = similarity => {\n    if (similarity >= 0.9) return \"Perfect! Excellent form! 🎉\";\n    if (similarity >= 0.8) return \"Great job! Very close to reference! 👏\";\n    if (similarity >= 0.7) return \"Good! Keep practicing to improve! 💪\";\n    if (similarity >= 0.6) return \"Not bad! Focus on matching the reference more closely.\";\n    if (similarity >= 0.5) return \"Keep trying! Watch the reference and adjust your pose.\";\n    return \"Keep practicing! You're getting there! 🎯\";\n  };\n\n  // Process pose comparison\n  const processPoseComparison = userLandmarks => {\n    if (!referencePoses || referencePoses.length === 0) return;\n\n    // Get current reference pose (use first one for now, could be time-synced)\n    const refPose = referencePoses[0];\n    if (!refPose || !refPose.kp) return;\n\n    // Compute angles for both poses\n    const userAngles = computeJointAngles(userLandmarks);\n    const refAngles = computeJointAngles(refPose.kp);\n\n    // Calculate similarity\n    const currentSimilarity = computeCosineSimilarity(userAngles, refAngles);\n    setSimilarity(currentSimilarity);\n\n    // Calculate score\n    const frameScore = calculateScore(currentSimilarity);\n    setCurrentScore(frameScore);\n\n    // Update session scores\n    scoreHistoryRef.current.push(frameScore);\n    frameCountRef.current++;\n\n    // Update session statistics\n    const scores = scoreHistoryRef.current;\n    const totalScore = scores.reduce((sum, score) => sum + score, 0);\n    const averageScore = totalScore / scores.length;\n    const bestScore = Math.max(...scores);\n    const worstScore = Math.min(...scores);\n    setTotalScore(totalScore);\n    setSessionStats({\n      totalFrames: frameCountRef.current,\n      averageSimilarity: currentSimilarity,\n      bestScore: bestScore,\n      worstScore: worstScore,\n      averageScore: averageScore\n    });\n\n    // Update feedback\n    setFeedback(getFeedback(currentSimilarity));\n  };\n\n  // Start tracking\n  const startTracking = () => {\n    setIsTracking(true);\n    setCurrentScore(0);\n    setTotalScore(0);\n    setSessionScores([]);\n    scoreHistoryRef.current = [];\n    frameCountRef.current = 0;\n    setFeedback('Start moving to see your score!');\n  };\n\n  // Stop tracking\n  const stopTracking = () => {\n    setIsTracking(false);\n    const finalScore = scoreHistoryRef.current.length > 0 ? Math.round(scoreHistoryRef.current.reduce((sum, score) => sum + score, 0) / scoreHistoryRef.current.length) : 0;\n    setSessionScores(prev => [...prev, {\n      timestamp: new Date().toISOString(),\n      finalScore: finalScore,\n      frameCount: frameCountRef.current,\n      averageSimilarity: sessionStats.averageSimilarity\n    }]);\n  };\n\n  // Reset session\n  const resetSession = () => {\n    setIsTracking(false);\n    setCurrentScore(0);\n    setTotalScore(0);\n    setSessionScores([]);\n    setSimilarity(0);\n    setFeedback('');\n    scoreHistoryRef.current = [];\n    frameCountRef.current = 0;\n    setSessionStats({\n      totalFrames: 0,\n      averageSimilarity: 0,\n      bestScore: 0,\n      worstScore: 0\n    });\n  };\n\n  // Simulate pose data for demo (replace with real camera input)\n  useEffect(() => {\n    if (!isTracking) return;\n    const interval = setInterval(() => {\n      // Simulate user landmarks (replace with real MediaPipe data)\n      const simulatedLandmarks = Array.from({\n        length: 33\n      }, () => [Math.random() * 2 - 1,\n      // x\n      Math.random() * 2 - 1,\n      // y\n      Math.random() * 2 - 1,\n      // z\n      Math.random() // visibility\n      ]);\n      processPoseComparison(simulatedLandmarks);\n    }, 100); // 10fps\n\n    return () => clearInterval(interval);\n  }, [isTracking, referencePoses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pose-comparison\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comparison-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFAF Pose Comparison & Scoring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Compare your movements against the reference video and earn points!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoring-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-card current\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-value\",\n            children: currentScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-label\",\n            children: \"Current Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-card total\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-value\",\n            children: Math.round(totalScore / Math.max(frameCountRef.current, 1))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-label\",\n            children: \"Average Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-card similarity\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-value\",\n            children: [(similarity * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-label\",\n            children: \"Similarity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-text\",\n          children: feedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ${isTracking ? 'stop' : 'start'}`,\n          onClick: isTracking ? stopTracking : startTracking,\n          children: isTracking ? '⏹️ Stop Tracking' : '▶️ Start Tracking'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn reset\",\n          onClick: resetSession,\n          disabled: isTracking,\n          children: \"\\uD83D\\uDD04 Reset Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"session-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Session Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Frames Tracked:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: sessionStats.totalFrames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Best Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: sessionStats.bestScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Worst Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: sessionStats.worstScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Average Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: sessionStats.averageScore.toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), sessionScores.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"session-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Session History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-list\",\n        children: sessionScores.map((session, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-time\",\n            children: new Date(session.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-score\",\n            children: [\"Final Score: \", session.finalScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-frames\",\n            children: [\"Frames: \", session.frameCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(PoseComparison, \"Zc9jZ08oC5Vqbg8Uwz2arXOvfbo=\");\n_c = PoseComparison;\nexport default PoseComparison;\nvar _c;\n$RefreshReg$(_c, \"PoseComparison\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","PoseComparison","referencePoses","_s","isTracking","setIsTracking","currentScore","setCurrentScore","totalScore","setTotalScore","sessionScores","setSessionScores","feedback","setFeedback","similarity","setSimilarity","sessionStats","setSessionStats","totalFrames","averageSimilarity","bestScore","worstScore","scoreHistoryRef","frameCountRef","computeJointAngles","landmarks","length","elbow_L","elbow_R","knee_L","knee_R","L_SHOULDER","L_ELBOW","L_WRIST","R_SHOULDER","R_ELBOW","R_WRIST","L_HIP","L_KNEE","L_ANKLE","R_HIP","R_KNEE","R_ANKLE","computeAngle","p1_idx","p2_idx","p3_idx","p1","slice","p2","p3","v1","v2","dot","norm1","Math","sqrt","norm2","cosAngle","max","min","acos","computeCosineSimilarity","angles1","angles2","joints","vec1","map","joint","vec2","reduce","sum","val","i","cosSim","calculateScore","round","getFeedback","processPoseComparison","userLandmarks","refPose","kp","userAngles","refAngles","currentSimilarity","frameScore","current","push","scores","score","averageScore","startTracking","stopTracking","finalScore","prev","timestamp","Date","toISOString","frameCount","resetSession","interval","setInterval","simulatedLandmarks","Array","from","random","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onClick","disabled","session","index","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/vaishnavichakka/tempProj/frontend/src/components/PoseComparison.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './PoseComparison.css';\n\nconst PoseComparison = ({ referencePoses }) => {\n  const [isTracking, setIsTracking] = useState(false);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  const [sessionScores, setSessionScores] = useState([]);\n  const [feedback, setFeedback] = useState('');\n  const [similarity, setSimilarity] = useState(0);\n  const [sessionStats, setSessionStats] = useState({\n    totalFrames: 0,\n    averageSimilarity: 0,\n    bestScore: 0,\n    worstScore: 0\n  });\n\n  const scoreHistoryRef = useRef([]);\n  const frameCountRef = useRef(0);\n\n  // Compute joint angles from MediaPipe landmarks\n  const computeJointAngles = (landmarks) => {\n    if (!landmarks || landmarks.length < 33) {\n      return { elbow_L: 0, elbow_R: 0, knee_L: 0, knee_R: 0 };\n    }\n\n    // MediaPipe pose landmark indices\n    const L_SHOULDER = 11, L_ELBOW = 13, L_WRIST = 15;\n    const R_SHOULDER = 12, R_ELBOW = 14, R_WRIST = 16;\n    const L_HIP = 23, L_KNEE = 25, L_ANKLE = 27;\n    const R_HIP = 24, R_KNEE = 26, R_ANKLE = 28;\n\n    const computeAngle = (p1_idx, p2_idx, p3_idx) => {\n      const p1 = landmarks[p1_idx].slice(0, 3); // x, y, z\n      const p2 = landmarks[p2_idx].slice(0, 3);\n      const p3 = landmarks[p3_idx].slice(0, 3);\n\n      const v1 = [p1[0] - p2[0], p1[1] - p2[1], p1[2] - p2[2]];\n      const v2 = [p3[0] - p2[0], p3[1] - p2[1], p3[2] - p2[2]];\n\n      const dot = v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n      const norm1 = Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]);\n      const norm2 = Math.sqrt(v2[0] * v2[0] + v2[1] * v2[1] + v2[2] * v2[2]);\n\n      if (norm1 === 0 || norm2 === 0) return 0;\n      \n      const cosAngle = Math.max(-1, Math.min(1, dot / (norm1 * norm2)));\n      return Math.acos(cosAngle);\n    };\n\n    return {\n      elbow_L: computeAngle(L_SHOULDER, L_ELBOW, L_WRIST),\n      elbow_R: computeAngle(R_SHOULDER, R_ELBOW, R_WRIST),\n      knee_L: computeAngle(L_HIP, L_KNEE, L_ANKLE),\n      knee_R: computeAngle(R_HIP, R_KNEE, R_ANKLE)\n    };\n  };\n\n  // Compute cosine similarity between two angle vectors\n  const computeCosineSimilarity = (angles1, angles2) => {\n    const joints = ['elbow_L', 'elbow_R', 'knee_L', 'knee_R'];\n    const vec1 = joints.map(joint => angles1[joint] || 0);\n    const vec2 = joints.map(joint => angles2[joint] || 0);\n\n    const dot = vec1.reduce((sum, val, i) => sum + val * vec2[i], 0);\n    const norm1 = Math.sqrt(vec1.reduce((sum, val) => sum + val * val, 0));\n    const norm2 = Math.sqrt(vec2.reduce((sum, val) => sum + val * val, 0));\n\n    if (norm1 === 0 || norm2 === 0) return 0;\n    \n    const cosSim = dot / (norm1 * norm2);\n    return Math.max(0, Math.min(1, (cosSim + 1) / 2)); // Map to [0, 1]\n  };\n\n  // Calculate score based on similarity\n  const calculateScore = (similarity) => {\n    // Scoring system: \n    // 0.9+ = 100 points (excellent)\n    // 0.8-0.9 = 80-99 points (very good)\n    // 0.7-0.8 = 60-79 points (good)\n    // 0.6-0.7 = 40-59 points (fair)\n    // 0.5-0.6 = 20-39 points (poor)\n    // <0.5 = 0-19 points (very poor)\n    \n    if (similarity >= 0.9) return 100;\n    if (similarity >= 0.8) return Math.round(80 + (similarity - 0.8) * 200);\n    if (similarity >= 0.7) return Math.round(60 + (similarity - 0.7) * 200);\n    if (similarity >= 0.6) return Math.round(40 + (similarity - 0.6) * 200);\n    if (similarity >= 0.5) return Math.round(20 + (similarity - 0.5) * 200);\n    return Math.round(similarity * 40);\n  };\n\n  // Get feedback based on similarity\n  const getFeedback = (similarity) => {\n    if (similarity >= 0.9) return \"Perfect! Excellent form! 🎉\";\n    if (similarity >= 0.8) return \"Great job! Very close to reference! 👏\";\n    if (similarity >= 0.7) return \"Good! Keep practicing to improve! 💪\";\n    if (similarity >= 0.6) return \"Not bad! Focus on matching the reference more closely.\";\n    if (similarity >= 0.5) return \"Keep trying! Watch the reference and adjust your pose.\";\n    return \"Keep practicing! You're getting there! 🎯\";\n  };\n\n  // Process pose comparison\n  const processPoseComparison = (userLandmarks) => {\n    if (!referencePoses || referencePoses.length === 0) return;\n\n    // Get current reference pose (use first one for now, could be time-synced)\n    const refPose = referencePoses[0];\n    if (!refPose || !refPose.kp) return;\n\n    // Compute angles for both poses\n    const userAngles = computeJointAngles(userLandmarks);\n    const refAngles = computeJointAngles(refPose.kp);\n\n    // Calculate similarity\n    const currentSimilarity = computeCosineSimilarity(userAngles, refAngles);\n    setSimilarity(currentSimilarity);\n\n    // Calculate score\n    const frameScore = calculateScore(currentSimilarity);\n    setCurrentScore(frameScore);\n\n    // Update session scores\n    scoreHistoryRef.current.push(frameScore);\n    frameCountRef.current++;\n\n    // Update session statistics\n    const scores = scoreHistoryRef.current;\n    const totalScore = scores.reduce((sum, score) => sum + score, 0);\n    const averageScore = totalScore / scores.length;\n    const bestScore = Math.max(...scores);\n    const worstScore = Math.min(...scores);\n\n    setTotalScore(totalScore);\n    setSessionStats({\n      totalFrames: frameCountRef.current,\n      averageSimilarity: currentSimilarity,\n      bestScore: bestScore,\n      worstScore: worstScore,\n      averageScore: averageScore\n    });\n\n    // Update feedback\n    setFeedback(getFeedback(currentSimilarity));\n  };\n\n  // Start tracking\n  const startTracking = () => {\n    setIsTracking(true);\n    setCurrentScore(0);\n    setTotalScore(0);\n    setSessionScores([]);\n    scoreHistoryRef.current = [];\n    frameCountRef.current = 0;\n    setFeedback('Start moving to see your score!');\n  };\n\n  // Stop tracking\n  const stopTracking = () => {\n    setIsTracking(false);\n    const finalScore = scoreHistoryRef.current.length > 0 \n      ? Math.round(scoreHistoryRef.current.reduce((sum, score) => sum + score, 0) / scoreHistoryRef.current.length)\n      : 0;\n    \n    setSessionScores(prev => [...prev, {\n      timestamp: new Date().toISOString(),\n      finalScore: finalScore,\n      frameCount: frameCountRef.current,\n      averageSimilarity: sessionStats.averageSimilarity\n    }]);\n  };\n\n  // Reset session\n  const resetSession = () => {\n    setIsTracking(false);\n    setCurrentScore(0);\n    setTotalScore(0);\n    setSessionScores([]);\n    setSimilarity(0);\n    setFeedback('');\n    scoreHistoryRef.current = [];\n    frameCountRef.current = 0;\n    setSessionStats({\n      totalFrames: 0,\n      averageSimilarity: 0,\n      bestScore: 0,\n      worstScore: 0\n    });\n  };\n\n  // Simulate pose data for demo (replace with real camera input)\n  useEffect(() => {\n    if (!isTracking) return;\n\n    const interval = setInterval(() => {\n      // Simulate user landmarks (replace with real MediaPipe data)\n      const simulatedLandmarks = Array.from({length: 33}, () => [\n        Math.random() * 2 - 1,  // x\n        Math.random() * 2 - 1,  // y\n        Math.random() * 2 - 1,  // z\n        Math.random()           // visibility\n      ]);\n      \n      processPoseComparison(simulatedLandmarks);\n    }, 100); // 10fps\n\n    return () => clearInterval(interval);\n  }, [isTracking, referencePoses]);\n\n  return (\n    <div className=\"pose-comparison\">\n      <div className=\"comparison-header\">\n        <h2>🎯 Pose Comparison & Scoring</h2>\n        <p>Compare your movements against the reference video and earn points!</p>\n      </div>\n\n      <div className=\"scoring-dashboard\">\n        <div className=\"score-cards\">\n          <div className=\"score-card current\">\n            <div className=\"score-value\">{currentScore}</div>\n            <div className=\"score-label\">Current Score</div>\n          </div>\n          \n          <div className=\"score-card total\">\n            <div className=\"score-value\">{Math.round(totalScore / Math.max(frameCountRef.current, 1))}</div>\n            <div className=\"score-label\">Average Score</div>\n          </div>\n          \n          <div className=\"score-card similarity\">\n            <div className=\"score-value\">{(similarity * 100).toFixed(1)}%</div>\n            <div className=\"score-label\">Similarity</div>\n          </div>\n        </div>\n\n        <div className=\"feedback-section\">\n          <div className=\"feedback-text\">{feedback}</div>\n        </div>\n\n        <div className=\"controls\">\n          <button \n            className={`control-btn ${isTracking ? 'stop' : 'start'}`}\n            onClick={isTracking ? stopTracking : startTracking}\n          >\n            {isTracking ? '⏹️ Stop Tracking' : '▶️ Start Tracking'}\n          </button>\n          \n          <button \n            className=\"control-btn reset\"\n            onClick={resetSession}\n            disabled={isTracking}\n          >\n            🔄 Reset Session\n          </button>\n        </div>\n      </div>\n\n      <div className=\"session-stats\">\n        <h3>Session Statistics</h3>\n        <div className=\"stats-grid\">\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Frames Tracked:</span>\n            <span className=\"stat-value\">{sessionStats.totalFrames}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Best Score:</span>\n            <span className=\"stat-value\">{sessionStats.bestScore}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Worst Score:</span>\n            <span className=\"stat-value\">{sessionStats.worstScore}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Average Score:</span>\n            <span className=\"stat-value\">{sessionStats.averageScore.toFixed(1)}</span>\n          </div>\n        </div>\n      </div>\n\n      {sessionScores.length > 0 && (\n        <div className=\"session-history\">\n          <h3>Session History</h3>\n          <div className=\"history-list\">\n            {sessionScores.map((session, index) => (\n              <div key={index} className=\"history-item\">\n                <div className=\"history-time\">\n                  {new Date(session.timestamp).toLocaleTimeString()}\n                </div>\n                <div className=\"history-score\">\n                  Final Score: {session.finalScore}\n                </div>\n                <div className=\"history-frames\">\n                  Frames: {session.frameCount}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PoseComparison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}