{"ast":null,"code":"import { Node, mergeAttributes } from '@tiptap/core';\n\n/**\n * This extension allows you to insert hard breaks.\n * @see https://www.tiptap.dev/api/nodes/hard-break\n */\nconst HardBreak = Node.create({\n  name: 'hardBreak',\n  addOptions() {\n    return {\n      keepMarks: true,\n      HTMLAttributes: {}\n    };\n  },\n  inline: true,\n  group: 'inline',\n  selectable: false,\n  linebreakReplacement: true,\n  parseHTML() {\n    return [{\n      tag: 'br'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n  },\n  renderText() {\n    return '\\n';\n  },\n  addCommands() {\n    return {\n      setHardBreak: () => ({\n        commands,\n        chain,\n        state,\n        editor\n      }) => {\n        return commands.first([() => commands.exitCode(), () => commands.command(() => {\n          const {\n            selection,\n            storedMarks\n          } = state;\n          if (selection.$from.parent.type.spec.isolating) {\n            return false;\n          }\n          const {\n            keepMarks\n          } = this.options;\n          const {\n            splittableMarks\n          } = editor.extensionManager;\n          const marks = storedMarks || selection.$to.parentOffset && selection.$from.marks();\n          return chain().insertContent({\n            type: this.name\n          }).command(({\n            tr,\n            dispatch\n          }) => {\n            if (dispatch && marks && keepMarks) {\n              const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n              tr.ensureMarks(filteredMarks);\n            }\n            return true;\n          }).run();\n        })]);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak()\n    };\n  }\n});\nexport { HardBreak, HardBreak as default };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}