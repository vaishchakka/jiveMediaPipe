{"ast":null,"code":"import { supportsScrollTimeline } from 'motion-dom';\nimport { scrollInfo } from '../track.mjs';\nconst timelineCache = new Map();\nfunction scrollTimelineFallback(options) {\n  const currentTime = {\n    value: 0\n  };\n  const cancel = scrollInfo(info => {\n    currentTime.value = info[options.axis].progress * 100;\n  }, options);\n  return {\n    currentTime,\n    cancel\n  };\n}\nfunction getTimeline({\n  source,\n  container,\n  ...options\n}) {\n  const {\n    axis\n  } = options;\n  if (source) container = source;\n  const containerCache = timelineCache.get(container) ?? new Map();\n  timelineCache.set(container, containerCache);\n  const targetKey = options.target ?? \"self\";\n  const targetCache = containerCache.get(targetKey) ?? {};\n  const axisKey = axis + (options.offset ?? []).join(\",\");\n  if (!targetCache[axisKey]) {\n    targetCache[axisKey] = !options.target && supportsScrollTimeline() ? new ScrollTimeline({\n      source: container,\n      axis\n    }) : scrollTimelineFallback({\n      container,\n      ...options\n    });\n  }\n  return targetCache[axisKey];\n}\nexport { getTimeline };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}