{"ast":null,"code":"var _jsxFileName = \"/Users/vaishnavichakka/tempProj/frontend/src/components/RealtimeScorer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './RealtimeScorer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealtimeScorer = ({\n  isGameStarted,\n  poseData,\n  onGameEnd,\n  onScoreUpdate\n}) => {\n  _s();\n  const [totalScore, setTotalScore] = useState(0);\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [pointGain, setPointGain] = useState(null);\n  const [showPointGain, setShowPointGain] = useState(false);\n  const [accuracy, setAccuracy] = useState(0);\n  // Removed unused frameCount and gameStartTime variables\n\n  // Send pose data to backend for scoring every 0.5 seconds\n  const sendPoseForScoring = useCallback(async poseData => {\n    if (!isGameStarted || !poseData) {\n      console.log('⚠️ Not sending pose - game not started or no pose data');\n      return;\n    }\n\n    // Double-check that game is still active before sending\n    if (!isGameStarted) {\n      console.log('🛑 Game ended, stopping pose scoring');\n      return;\n    }\n    console.log(`📊 Sending pose for scoring: ${poseData.kp.length} landmarks`);\n    console.log('📊 Pose data sample:', poseData.kp.slice(0, 3)); // Show first 3 landmarks\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/compare-pose', {\n        live_pose: poseData\n      });\n      const {\n        points_earned,\n        similarity,\n        message\n      } = response.data;\n      console.log(`🎯 Received: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n\n      // Update scores\n      setCurrentPoints(points_earned);\n      const newTotalScore = totalScore + points_earned;\n      setTotalScore(newTotalScore);\n\n      // Notify parent of score update\n      if (onScoreUpdate) {\n        onScoreUpdate(newTotalScore);\n      }\n\n      // Update accuracy with the actual similarity percentage from backend\n      setAccuracy(Math.round(similarity));\n\n      // Show point gain animation\n      if (points_earned > 0) {\n        setPointGain(points_earned);\n        setShowPointGain(true);\n\n        // Hide point gain after animation\n        setTimeout(() => {\n          setShowPointGain(false);\n        }, 1000);\n      }\n      console.log(`🎯 Score: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n    } catch (error) {\n      console.error('❌ Error scoring pose:', error);\n    }\n  }, [isGameStarted, totalScore, onScoreUpdate]);\n\n  // Process pose data with proper interval (every 0.5 seconds)\n  useEffect(() => {\n    if (poseData && isGameStarted) {\n      console.log('🎯 Starting pose scoring interval with pose data:', poseData.kp.length, 'landmarks');\n\n      // Send pose for scoring every 0.5 seconds for more responsive scoring\n      const interval = setInterval(() => {\n        // Check if game is still active before sending\n        if (isGameStarted) {\n          console.log('🎯 Interval triggered - sending pose for scoring');\n          sendPoseForScoring(poseData);\n        } else {\n          console.log('🛑 Game ended, stopping interval');\n          clearInterval(interval);\n        }\n      }, 500); // 0.5 seconds\n\n      return () => {\n        console.log('🎯 Clearing pose scoring interval');\n        clearInterval(interval);\n      };\n    } else {\n      console.log('⚠️ Not starting pose scoring - missing poseData or game not started');\n    }\n  }, [poseData, isGameStarted, sendPoseForScoring]);\n\n  // Reset scores when game resets\n  useEffect(() => {\n    if (!isGameStarted) {\n      console.log('🛑 Game ended - resetting all scores and stopping scoring');\n      setTotalScore(0);\n      setCurrentPoints(0);\n      setPointGain(null);\n      setShowPointGain(false);\n      setAccuracy(0);\n    } else {\n      // Set game start time when game begins\n      setGameStartTime(Date.now());\n    }\n  }, [isGameStarted]);\n\n  // Game timer removed - game should end when video ends, not after fixed time\n  // The video ending is handled by the ReferenceVideo component calling onVideoEnd\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"realtime-scorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Total Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: totalScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: currentPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accuracy\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: [accuracy, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), showPointGain && pointGain > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"point-gain-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"point-gain-text\",\n        children: [\"+\", pointGain]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoring-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDFAF Real-time pose scoring active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDC83 Follow the reference video closely!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(RealtimeScorer, \"ZibdXCGig8qEnk6afAmimerYrco=\");\n_c = RealtimeScorer;\nexport default RealtimeScorer;\nvar _c;\n$RefreshReg$(_c, \"RealtimeScorer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","RealtimeScorer","isGameStarted","poseData","onGameEnd","onScoreUpdate","_s","totalScore","setTotalScore","currentPoints","setCurrentPoints","pointGain","setPointGain","showPointGain","setShowPointGain","accuracy","setAccuracy","sendPoseForScoring","console","log","kp","length","slice","response","post","live_pose","points_earned","similarity","message","data","toFixed","newTotalScore","Math","round","setTimeout","error","interval","setInterval","clearInterval","setGameStartTime","Date","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vaishnavichakka/tempProj/frontend/src/components/RealtimeScorer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './RealtimeScorer.css';\n\nconst RealtimeScorer = ({ isGameStarted, poseData, onGameEnd, onScoreUpdate }) => {\n  const [totalScore, setTotalScore] = useState(0);\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [pointGain, setPointGain] = useState(null);\n  const [showPointGain, setShowPointGain] = useState(false);\n  const [accuracy, setAccuracy] = useState(0);\n  // Removed unused frameCount and gameStartTime variables\n\n  // Send pose data to backend for scoring every 0.5 seconds\n  const sendPoseForScoring = useCallback(async (poseData) => {\n    if (!isGameStarted || !poseData) {\n      console.log('⚠️ Not sending pose - game not started or no pose data');\n      return;\n    }\n    \n    // Double-check that game is still active before sending\n    if (!isGameStarted) {\n      console.log('🛑 Game ended, stopping pose scoring');\n      return;\n    }\n\n    console.log(`📊 Sending pose for scoring: ${poseData.kp.length} landmarks`);\n    console.log('📊 Pose data sample:', poseData.kp.slice(0, 3)); // Show first 3 landmarks\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/compare-pose', {\n        live_pose: poseData\n      });\n\n      const { points_earned, similarity, message } = response.data;\n      console.log(`🎯 Received: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n      \n      // Update scores\n      setCurrentPoints(points_earned);\n      const newTotalScore = totalScore + points_earned;\n      setTotalScore(newTotalScore);\n      \n      // Notify parent of score update\n      if (onScoreUpdate) {\n        onScoreUpdate(newTotalScore);\n      }\n      \n      // Update accuracy with the actual similarity percentage from backend\n      setAccuracy(Math.round(similarity));\n      \n      // Show point gain animation\n      if (points_earned > 0) {\n        setPointGain(points_earned);\n        setShowPointGain(true);\n        \n        // Hide point gain after animation\n        setTimeout(() => {\n          setShowPointGain(false);\n        }, 1000);\n      }\n      \n      console.log(`🎯 Score: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n      \n    } catch (error) {\n      console.error('❌ Error scoring pose:', error);\n    }\n  }, [isGameStarted, totalScore, onScoreUpdate]);\n\n  // Process pose data with proper interval (every 0.5 seconds)\n  useEffect(() => {\n    if (poseData && isGameStarted) {\n      console.log('🎯 Starting pose scoring interval with pose data:', poseData.kp.length, 'landmarks');\n      \n      // Send pose for scoring every 0.5 seconds for more responsive scoring\n      const interval = setInterval(() => {\n        // Check if game is still active before sending\n        if (isGameStarted) {\n          console.log('🎯 Interval triggered - sending pose for scoring');\n          sendPoseForScoring(poseData);\n        } else {\n          console.log('🛑 Game ended, stopping interval');\n          clearInterval(interval);\n        }\n      }, 500); // 0.5 seconds\n\n      return () => {\n        console.log('🎯 Clearing pose scoring interval');\n        clearInterval(interval);\n      };\n    } else {\n      console.log('⚠️ Not starting pose scoring - missing poseData or game not started');\n    }\n  }, [poseData, isGameStarted, sendPoseForScoring]);\n\n  // Reset scores when game resets\n  useEffect(() => {\n    if (!isGameStarted) {\n      console.log('🛑 Game ended - resetting all scores and stopping scoring');\n      setTotalScore(0);\n      setCurrentPoints(0);\n      setPointGain(null);\n      setShowPointGain(false);\n      setAccuracy(0);\n    } else {\n      // Set game start time when game begins\n      setGameStartTime(Date.now());\n    }\n  }, [isGameStarted]);\n\n  // Game timer removed - game should end when video ends, not after fixed time\n  // The video ending is handled by the ReferenceVideo component calling onVideoEnd\n\n  return (\n    <div className=\"realtime-scorer\">\n      <div className=\"score-display\">\n        <div className=\"total-score\">\n          <div className=\"score-label\">Total Score</div>\n          <div className=\"score-value\">{totalScore}</div>\n        </div>\n        \n        <div className=\"current-score\">\n          <div className=\"score-label\">Current</div>\n          <div className=\"score-value\">{currentPoints}</div>\n        </div>\n        \n        <div className=\"accuracy\">\n          <div className=\"score-label\">Accuracy</div>\n          <div className=\"score-value\">{accuracy}%</div>\n        </div>\n      </div>\n\n      {/* Point Gain Animation */}\n      {showPointGain && pointGain > 0 && (\n        <div className=\"point-gain-animation\">\n          <div className=\"point-gain-text\">\n            +{pointGain}\n          </div>\n        </div>\n      )}\n\n      <div className=\"scoring-info\">\n        <p>🎯 Real-time pose scoring active</p>\n        <p>💃 Follow the reference video closely!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default RealtimeScorer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}