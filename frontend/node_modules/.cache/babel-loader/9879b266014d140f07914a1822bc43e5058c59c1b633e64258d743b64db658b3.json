{"ast":null,"code":"var _jsxFileName = \"/Users/vaishnavichakka/jiveMediaPipe/frontend/src/components/RealtimeScorer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './RealtimeScorer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealtimeScorer = ({\n  isGameStarted,\n  poseData,\n  onScoreUpdate\n}) => {\n  _s();\n  const [totalScore, setTotalScore] = useState(0);\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [pointGain, setPointGain] = useState(null);\n  const [showPointGain, setShowPointGain] = useState(false);\n  const [accuracy, setAccuracy] = useState(0);\n  const [frameCount, setFrameCount] = useState(0);\n\n  // Use refs to avoid dependency issues\n  const totalScoreRef = useRef(0);\n  const intervalRef = useRef(null);\n  const poseDataRef = useRef(null);\n  const isGameStartedRef = useRef(false);\n\n  // Update refs when props change\n  useEffect(() => {\n    poseDataRef.current = poseData;\n    isGameStartedRef.current = isGameStarted;\n  }, [poseData, isGameStarted]);\n\n  // Send pose data to backend for scoring\n  const sendPoseForScoring = async () => {\n    const currentPoseData = poseDataRef.current;\n    const currentGameStarted = isGameStartedRef.current;\n    if (!currentGameStarted || !currentPoseData) {\n      return;\n    }\n    console.log(`📊 Sending pose for scoring: ${currentPoseData.kp.length} landmarks`);\n    try {\n      const response = await axios.post('http://localhost:5000/api/compare-pose', {\n        live_pose: currentPoseData\n      });\n      const {\n        points_earned,\n        similarity,\n        message\n      } = response.data;\n      console.log('🎯 API Response:', response.data);\n\n      // Update scores\n      setCurrentPoints(points_earned);\n      const newTotalScore = totalScoreRef.current + points_earned;\n      totalScoreRef.current = newTotalScore;\n      setTotalScore(newTotalScore);\n      console.log(`🎯 Score updated: ${points_earned} points, Total: ${newTotalScore}`);\n\n      // Update frame count and calculate accuracy\n      setFrameCount(prev => {\n        const newFrameCount = prev + 1;\n        const newAccuracy = newFrameCount > 0 ? newTotalScore / newFrameCount : points_earned;\n        setAccuracy(Math.round(newAccuracy));\n        return newFrameCount;\n      });\n\n      // Update parent component with current total score\n      if (onScoreUpdate) {\n        onScoreUpdate(newTotalScore);\n      }\n\n      // Show point gain animation\n      if (points_earned > 0) {\n        setPointGain(points_earned);\n        setShowPointGain(true);\n\n        // Hide point gain after animation\n        setTimeout(() => {\n          setShowPointGain(false);\n        }, 1000);\n      }\n      console.log(`🎯 Score: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n    } catch (error) {\n      console.error('❌ Error scoring pose:', error);\n    }\n  };\n\n  // Start/stop scoring interval based on game state\n  useEffect(() => {\n    if (isGameStarted) {\n      console.log('🎯 Starting scoring interval...');\n      // Clear any existing interval\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n\n      // Start new interval - score every 0.5 seconds\n      intervalRef.current = setInterval(() => {\n        sendPoseForScoring();\n      }, 500);\n    } else {\n      console.log('🛑 Stopping scoring interval...');\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n\n      // Reset scores when game stops\n      setTotalScore(0);\n      setCurrentPoints(0);\n      setPointGain(null);\n      setShowPointGain(false);\n      setAccuracy(0);\n      setFrameCount(0);\n      totalScoreRef.current = 0;\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isGameStarted, onScoreUpdate]);\n  console.log('🎯 RealtimeScorer render:', {\n    totalScore,\n    currentPoints,\n    accuracy\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"realtime-scorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Total Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: totalScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: currentPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accuracy\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: [accuracy, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), showPointGain && pointGain > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"point-gain-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"point-gain-text\",\n        children: [\"+\", pointGain]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoring-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDFAF Real-time pose scoring active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDC83 Follow the reference video closely!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(RealtimeScorer, \"GJUFYXDpd/i+6OrhOtV0XCq92pE=\");\n_c = RealtimeScorer;\nexport default RealtimeScorer;\nvar _c;\n$RefreshReg$(_c, \"RealtimeScorer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","RealtimeScorer","isGameStarted","poseData","onScoreUpdate","_s","totalScore","setTotalScore","currentPoints","setCurrentPoints","pointGain","setPointGain","showPointGain","setShowPointGain","accuracy","setAccuracy","frameCount","setFrameCount","totalScoreRef","intervalRef","poseDataRef","isGameStartedRef","current","sendPoseForScoring","currentPoseData","currentGameStarted","console","log","kp","length","response","post","live_pose","points_earned","similarity","message","data","newTotalScore","prev","newFrameCount","newAccuracy","Math","round","setTimeout","toFixed","error","clearInterval","setInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vaishnavichakka/jiveMediaPipe/frontend/src/components/RealtimeScorer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './RealtimeScorer.css';\n\nconst RealtimeScorer = ({ isGameStarted, poseData, onScoreUpdate }) => {\n  const [totalScore, setTotalScore] = useState(0);\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [pointGain, setPointGain] = useState(null);\n  const [showPointGain, setShowPointGain] = useState(false);\n  const [accuracy, setAccuracy] = useState(0);\n  const [frameCount, setFrameCount] = useState(0);\n  \n  // Use refs to avoid dependency issues\n  const totalScoreRef = useRef(0);\n  const intervalRef = useRef(null);\n  const poseDataRef = useRef(null);\n  const isGameStartedRef = useRef(false);\n\n  // Update refs when props change\n  useEffect(() => {\n    poseDataRef.current = poseData;\n    isGameStartedRef.current = isGameStarted;\n  }, [poseData, isGameStarted]);\n\n  // Send pose data to backend for scoring\n  const sendPoseForScoring = async () => {\n    const currentPoseData = poseDataRef.current;\n    const currentGameStarted = isGameStartedRef.current;\n    \n    if (!currentGameStarted || !currentPoseData) {\n      return;\n    }\n\n    console.log(`📊 Sending pose for scoring: ${currentPoseData.kp.length} landmarks`);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/compare-pose', {\n        live_pose: currentPoseData\n      });\n      const { points_earned, similarity, message } = response.data;\n      \n      console.log('🎯 API Response:', response.data);\n      \n      // Update scores\n      setCurrentPoints(points_earned);\n      const newTotalScore = totalScoreRef.current + points_earned;\n      totalScoreRef.current = newTotalScore;\n      setTotalScore(newTotalScore);\n      \n      console.log(`🎯 Score updated: ${points_earned} points, Total: ${newTotalScore}`);\n      \n      // Update frame count and calculate accuracy\n      setFrameCount(prev => {\n        const newFrameCount = prev + 1;\n        const newAccuracy = newFrameCount > 0 ? newTotalScore / newFrameCount : points_earned;\n        setAccuracy(Math.round(newAccuracy));\n        return newFrameCount;\n      });\n      \n      // Update parent component with current total score\n      if (onScoreUpdate) {\n        onScoreUpdate(newTotalScore);\n      }\n      \n      // Show point gain animation\n      if (points_earned > 0) {\n        setPointGain(points_earned);\n        setShowPointGain(true);\n        \n        // Hide point gain after animation\n        setTimeout(() => {\n          setShowPointGain(false);\n        }, 1000);\n      }\n      \n      console.log(`🎯 Score: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n      \n    } catch (error) {\n      console.error('❌ Error scoring pose:', error);\n    }\n  };\n\n  // Start/stop scoring interval based on game state\n  useEffect(() => {\n    if (isGameStarted) {\n      console.log('🎯 Starting scoring interval...');\n      // Clear any existing interval\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      \n      // Start new interval - score every 0.5 seconds\n      intervalRef.current = setInterval(() => {\n        sendPoseForScoring();\n      }, 500);\n    } else {\n      console.log('🛑 Stopping scoring interval...');\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n      \n      // Reset scores when game stops\n      setTotalScore(0);\n      setCurrentPoints(0);\n      setPointGain(null);\n      setShowPointGain(false);\n      setAccuracy(0);\n      setFrameCount(0);\n      totalScoreRef.current = 0;\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isGameStarted, onScoreUpdate]);\n\n  console.log('🎯 RealtimeScorer render:', { totalScore, currentPoints, accuracy });\n  \n  return (\n    <div className=\"realtime-scorer\">\n      <div className=\"score-display\">\n        <div className=\"total-score\">\n          <div className=\"score-label\">Total Score</div>\n          <div className=\"score-value\">{totalScore}</div>\n        </div>\n        \n        <div className=\"current-score\">\n          <div className=\"score-label\">Current</div>\n          <div className=\"score-value\">{currentPoints}</div>\n        </div>\n        \n        <div className=\"accuracy\">\n          <div className=\"score-label\">Accuracy</div>\n          <div className=\"score-value\">{accuracy}%</div>\n        </div>\n      </div>\n\n      {/* Point Gain Animation */}\n      {showPointGain && pointGain > 0 && (\n        <div className=\"point-gain-animation\">\n          <div className=\"point-gain-text\">\n            +{pointGain}\n          </div>\n        </div>\n      )}\n\n      <div className=\"scoring-info\">\n        <p>🎯 Real-time pose scoring active</p>\n        <p>💃 Follow the reference video closely!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default RealtimeScorer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}