{"ast":null,"code":"var _jsxFileName = \"/Users/vaishnavichakka/tempProj/frontend/src/components/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './VideoPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  poseData,\n  videoSrc\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [videoOrientation, setVideoOrientation] = useState(0);\n  const [showOverlay, setShowOverlay] = useState(true);\n\n  // Pose connections for drawing skeleton\n  const POSE_CONNECTIONS = [[11, 12], [11, 13], [13, 15], [12, 14], [14, 16],\n  // Arms\n  [11, 23], [12, 24], [23, 24],\n  // Torso\n  [23, 25], [25, 27], [24, 26], [26, 28],\n  // Legs\n  [15, 17], [15, 19], [15, 21], [16, 18], [16, 20], [16, 22],\n  // Hands\n  [27, 29], [27, 31], [28, 30], [28, 32] // Feet\n  ];\n  useEffect(() => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (!video || !canvas || !poseData) return;\n    const ctx = canvas.getContext('2d');\n    const drawPose = () => {\n      if (!video.videoWidth || !video.videoHeight) return;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Find pose data for current time\n      const currentPose = findPoseForTime(currentTime);\n      if (!currentPose || !currentPose.ok) return;\n\n      // Draw skeleton\n      drawSkeleton(ctx, currentPose.kp, video.videoWidth, video.videoHeight);\n    };\n    const handleTimeUpdate = () => {\n      setCurrentTime(video.currentTime);\n      drawPose();\n    };\n    const handlePlay = () => setIsPlaying(true);\n    const handlePause = () => setIsPlaying(false);\n    video.addEventListener('timeupdate', handleTimeUpdate);\n    video.addEventListener('play', handlePlay);\n    video.addEventListener('pause', handlePause);\n\n    // Initial draw\n    drawPose();\n    return () => {\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n      video.removeEventListener('play', handlePlay);\n      video.removeEventListener('pause', handlePause);\n    };\n  }, [currentTime, poseData]);\n  const findPoseForTime = time => {\n    if (!poseData || poseData.length === 0) return null;\n\n    // Find closest pose data by time\n    let closest = poseData[0];\n    let minDiff = Math.abs(poseData[0].t - time);\n    for (const pose of poseData) {\n      const diff = Math.abs(pose.t - time);\n      if (diff < minDiff) {\n        minDiff = diff;\n        closest = pose;\n      }\n    }\n    return closest;\n  };\n  const drawSkeleton = (ctx, landmarks, videoWidth, videoHeight) => {\n    if (!landmarks || landmarks.length === 0) return;\n\n    // Convert world coordinates to screen coordinates\n    const screenLandmarks = landmarks.map(lm => {\n      // If using world coordinates, project to screen\n      if (Math.abs(lm[0]) > 1 || Math.abs(lm[1]) > 1) {\n        // World coordinates - simple projection\n        const x = (lm[0] + 0.5) * videoWidth;\n        const y = (lm[1] + 0.5) * videoHeight;\n        return {\n          x,\n          y,\n          visibility: lm[3]\n        };\n      } else {\n        // Normalized coordinates\n        const x = lm[0] * videoWidth;\n        const y = lm[1] * videoHeight;\n        return {\n          x,\n          y,\n          visibility: lm[3]\n        };\n      }\n    });\n\n    // Draw connections\n    ctx.strokeStyle = '#00ff00';\n    ctx.lineWidth = 2;\n    ctx.lineCap = 'round';\n    POSE_CONNECTIONS.forEach(([startIdx, endIdx]) => {\n      const start = screenLandmarks[startIdx];\n      const end = screenLandmarks[endIdx];\n      if (start && end && start.visibility > 0.5 && end.visibility > 0.5) {\n        ctx.beginPath();\n        ctx.moveTo(start.x, start.y);\n        ctx.lineTo(end.x, end.y);\n        ctx.stroke();\n      }\n    });\n\n    // Draw landmarks\n    ctx.fillStyle = '#ff0000';\n    screenLandmarks.forEach((lm, idx) => {\n      if (lm.visibility > 0.5) {\n        ctx.beginPath();\n        ctx.arc(lm.x, lm.y, 3, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    });\n  };\n  const handleVideoLoad = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (video && canvas) {\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Auto-detect orientation based on video dimensions\n      if (video.videoHeight > video.videoWidth) {\n        setVideoOrientation(90); // Portrait video, rotate 90 degrees\n      } else {\n        setVideoOrientation(0); // Landscape video, no rotation\n      }\n    }\n  };\n  const rotateVideo = () => {\n    setVideoOrientation(prev => (prev + 90) % 360);\n  };\n  const toggleOverlay = () => {\n    setShowOverlay(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        src: videoSrc,\n        onLoadedMetadata: handleVideoLoad,\n        controls: true,\n        className: \"video\",\n        style: {\n          transform: `rotate(${videoOrientation}deg)`,\n          transformOrigin: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), showOverlay && /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"pose-overlay\",\n        style: {\n          transform: `rotate(${videoOrientation}deg)`,\n          transformOrigin: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rotateVideo,\n        className: \"rotate-btn\",\n        children: \"\\uD83D\\uDD04 Rotate Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleOverlay,\n        className: \"overlay-btn\",\n        children: showOverlay ? '👁️ Hide Overlay' : '👁️ Show Overlay'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Time: \", currentTime.toFixed(2), \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", isPlaying ? 'Playing' : 'Paused']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Orientation: \", videoOrientation, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Overlay: \", showOverlay ? 'On' : 'Off']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), poseData && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pose Frames: \", poseData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"Ilm1cNi1+SyNQjzgAGZ13g2buVU=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","VideoPlayer","poseData","videoSrc","_s","videoRef","canvasRef","currentTime","setCurrentTime","isPlaying","setIsPlaying","videoOrientation","setVideoOrientation","showOverlay","setShowOverlay","POSE_CONNECTIONS","video","current","canvas","ctx","getContext","drawPose","videoWidth","videoHeight","clearRect","width","height","currentPose","findPoseForTime","ok","drawSkeleton","kp","handleTimeUpdate","handlePlay","handlePause","addEventListener","removeEventListener","time","length","closest","minDiff","Math","abs","t","pose","diff","landmarks","screenLandmarks","map","lm","x","y","visibility","strokeStyle","lineWidth","lineCap","forEach","startIdx","endIdx","start","end","beginPath","moveTo","lineTo","stroke","fillStyle","idx","arc","PI","fill","handleVideoLoad","rotateVideo","prev","toggleOverlay","className","children","ref","src","onLoadedMetadata","controls","style","transform","transformOrigin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","_c","$RefreshReg$"],"sources":["/Users/vaishnavichakka/tempProj/frontend/src/components/VideoPlayer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './VideoPlayer.css';\n\nconst VideoPlayer = ({ poseData, videoSrc }) => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [videoOrientation, setVideoOrientation] = useState(0);\n  const [showOverlay, setShowOverlay] = useState(true);\n\n  // Pose connections for drawing skeleton\n  const POSE_CONNECTIONS = [\n    [11, 12], [11, 13], [13, 15], [12, 14], [14, 16], // Arms\n    [11, 23], [12, 24], [23, 24], // Torso\n    [23, 25], [25, 27], [24, 26], [26, 28], // Legs\n    [15, 17], [15, 19], [15, 21], [16, 18], [16, 20], [16, 22], // Hands\n    [27, 29], [27, 31], [28, 30], [28, 32], // Feet\n  ];\n\n  useEffect(() => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (!video || !canvas || !poseData) return;\n\n    const ctx = canvas.getContext('2d');\n    \n    const drawPose = () => {\n      if (!video.videoWidth || !video.videoHeight) return;\n      \n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Find pose data for current time\n      const currentPose = findPoseForTime(currentTime);\n      if (!currentPose || !currentPose.ok) return;\n      \n      // Draw skeleton\n      drawSkeleton(ctx, currentPose.kp, video.videoWidth, video.videoHeight);\n    };\n\n    const handleTimeUpdate = () => {\n      setCurrentTime(video.currentTime);\n      drawPose();\n    };\n\n    const handlePlay = () => setIsPlaying(true);\n    const handlePause = () => setIsPlaying(false);\n\n    video.addEventListener('timeupdate', handleTimeUpdate);\n    video.addEventListener('play', handlePlay);\n    video.addEventListener('pause', handlePause);\n\n    // Initial draw\n    drawPose();\n\n    return () => {\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n      video.removeEventListener('play', handlePlay);\n      video.removeEventListener('pause', handlePause);\n    };\n  }, [currentTime, poseData]);\n\n  const findPoseForTime = (time) => {\n    if (!poseData || poseData.length === 0) return null;\n    \n    // Find closest pose data by time\n    let closest = poseData[0];\n    let minDiff = Math.abs(poseData[0].t - time);\n    \n    for (const pose of poseData) {\n      const diff = Math.abs(pose.t - time);\n      if (diff < minDiff) {\n        minDiff = diff;\n        closest = pose;\n      }\n    }\n    \n    return closest;\n  };\n\n  const drawSkeleton = (ctx, landmarks, videoWidth, videoHeight) => {\n    if (!landmarks || landmarks.length === 0) return;\n    \n    // Convert world coordinates to screen coordinates\n    const screenLandmarks = landmarks.map(lm => {\n      // If using world coordinates, project to screen\n      if (Math.abs(lm[0]) > 1 || Math.abs(lm[1]) > 1) {\n        // World coordinates - simple projection\n        const x = (lm[0] + 0.5) * videoWidth;\n        const y = (lm[1] + 0.5) * videoHeight;\n        return { x, y, visibility: lm[3] };\n      } else {\n        // Normalized coordinates\n        const x = lm[0] * videoWidth;\n        const y = lm[1] * videoHeight;\n        return { x, y, visibility: lm[3] };\n      }\n    });\n\n    // Draw connections\n    ctx.strokeStyle = '#00ff00';\n    ctx.lineWidth = 2;\n    ctx.lineCap = 'round';\n    \n    POSE_CONNECTIONS.forEach(([startIdx, endIdx]) => {\n      const start = screenLandmarks[startIdx];\n      const end = screenLandmarks[endIdx];\n      \n      if (start && end && start.visibility > 0.5 && end.visibility > 0.5) {\n        ctx.beginPath();\n        ctx.moveTo(start.x, start.y);\n        ctx.lineTo(end.x, end.y);\n        ctx.stroke();\n      }\n    });\n\n    // Draw landmarks\n    ctx.fillStyle = '#ff0000';\n    screenLandmarks.forEach((lm, idx) => {\n      if (lm.visibility > 0.5) {\n        ctx.beginPath();\n        ctx.arc(lm.x, lm.y, 3, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    });\n  };\n\n  const handleVideoLoad = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (video && canvas) {\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      \n      // Auto-detect orientation based on video dimensions\n      if (video.videoHeight > video.videoWidth) {\n        setVideoOrientation(90); // Portrait video, rotate 90 degrees\n      } else {\n        setVideoOrientation(0); // Landscape video, no rotation\n      }\n    }\n  };\n\n  const rotateVideo = () => {\n    setVideoOrientation(prev => (prev + 90) % 360);\n  };\n\n  const toggleOverlay = () => {\n    setShowOverlay(prev => !prev);\n  };\n\n  return (\n    <div className=\"video-player\">\n      <div className=\"video-container\">\n        <video\n          ref={videoRef}\n          src={videoSrc}\n          onLoadedMetadata={handleVideoLoad}\n          controls\n          className=\"video\"\n          style={{\n            transform: `rotate(${videoOrientation}deg)`,\n            transformOrigin: 'center'\n          }}\n        />\n        {showOverlay && (\n          <canvas\n            ref={canvasRef}\n            className=\"pose-overlay\"\n            style={{\n              transform: `rotate(${videoOrientation}deg)`,\n              transformOrigin: 'center'\n            }}\n          />\n        )}\n      </div>\n      \n      <div className=\"video-controls\">\n        <button onClick={rotateVideo} className=\"rotate-btn\">\n          🔄 Rotate Video\n        </button>\n        <button onClick={toggleOverlay} className=\"overlay-btn\">\n          {showOverlay ? '👁️ Hide Overlay' : '👁️ Show Overlay'}\n        </button>\n      </div>\n      \n      <div className=\"video-info\">\n        <p>Current Time: {currentTime.toFixed(2)}s</p>\n        <p>Status: {isPlaying ? 'Playing' : 'Paused'}</p>\n        <p>Orientation: {videoOrientation}°</p>\n        <p>Overlay: {showOverlay ? 'On' : 'Off'}</p>\n        {poseData && (\n          <p>Pose Frames: {poseData.length}</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}