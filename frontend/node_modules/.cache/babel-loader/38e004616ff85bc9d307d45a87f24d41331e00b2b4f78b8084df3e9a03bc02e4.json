{"ast":null,"code":"var _jsxFileName = \"/Users/vaishnavichakka/tempProj/frontend/src/components/RealtimeScorer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport './RealtimeScorer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealtimeScorer = ({\n  isGameStarted,\n  poseData,\n  onScoreUpdate\n}) => {\n  _s();\n  const [totalScore, setTotalScore] = useState(0);\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [pointGain, setPointGain] = useState(null);\n  const [showPointGain, setShowPointGain] = useState(false);\n  const [accuracy, setAccuracy] = useState(0);\n  const [frameCount, setFrameCount] = useState(0);\n  const totalScoreRef = useRef(0);\n\n  // Send pose data to backend for scoring every 0.5 seconds\n  const sendPoseForScoring = useCallback(async poseData => {\n    if (!isGameStarted || !poseData) {\n      console.log('❌ Not sending pose - game not started or no pose data');\n      return;\n    }\n    console.log(`📊 Sending pose for scoring: ${poseData.kp.length} landmarks`);\n    try {\n      const response = await axios.post('http://localhost:5000/api/compare-pose', {\n        live_pose: poseData\n      });\n      const {\n        points_earned,\n        similarity,\n        message\n      } = response.data;\n      console.log('🎯 API Response:', response.data);\n\n      // Update scores\n      setCurrentPoints(points_earned);\n      const newTotalScore = totalScoreRef.current + points_earned;\n      totalScoreRef.current = newTotalScore;\n      setTotalScore(newTotalScore);\n\n      // Update frame count and calculate accuracy\n      setFrameCount(prev => {\n        const newFrameCount = prev + 1;\n        const newAccuracy = newFrameCount > 0 ? newTotalScore / newFrameCount : points_earned;\n        setAccuracy(Math.round(newAccuracy));\n        return newFrameCount;\n      });\n\n      // Update parent component with current total score\n      if (onScoreUpdate) {\n        onScoreUpdate(newTotalScore);\n      }\n\n      // Show point gain animation\n      if (points_earned > 0) {\n        setPointGain(points_earned);\n        setShowPointGain(true);\n\n        // Hide point gain after animation\n        setTimeout(() => {\n          setShowPointGain(false);\n        }, 1000);\n      }\n      console.log(`🎯 Score: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n    } catch (error) {\n      console.error('❌ Error scoring pose:', error);\n    }\n  }, [isGameStarted, onScoreUpdate]);\n\n  // Process pose data when it changes - use interval for continuous scoring\n  useEffect(() => {\n    console.log('🔄 RealtimeScorer useEffect triggered:', {\n      poseData: !!poseData,\n      isGameStarted\n    });\n    if (poseData && isGameStarted) {\n      console.log('🎯 Starting scoring interval...');\n      // Send pose for scoring every 0.5 seconds\n      const interval = setInterval(() => {\n        sendPoseForScoring(poseData);\n      }, 500);\n      return () => {\n        console.log('🛑 Clearing scoring interval');\n        clearInterval(interval);\n      };\n    }\n  }, [poseData, isGameStarted, sendPoseForScoring]);\n\n  // Reset scores when game resets\n  useEffect(() => {\n    if (!isGameStarted) {\n      setTotalScore(0);\n      setCurrentPoints(0);\n      setPointGain(null);\n      setShowPointGain(false);\n      setAccuracy(0);\n      setFrameCount(0);\n      totalScoreRef.current = 0;\n    }\n  }, [isGameStarted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"realtime-scorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Total Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: totalScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: currentPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accuracy\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: \"Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: [accuracy, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), showPointGain && pointGain > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"point-gain-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"point-gain-text\",\n        children: [\"+\", pointGain]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoring-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83C\\uDFAF Real-time pose scoring active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDC83 Follow the reference video closely!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(RealtimeScorer, \"lqnU2cyj8CgmYnYtvEFxCEH3dPs=\");\n_c = RealtimeScorer;\nexport default RealtimeScorer;\nvar _c;\n$RefreshReg$(_c, \"RealtimeScorer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","jsxDEV","_jsxDEV","RealtimeScorer","isGameStarted","poseData","onScoreUpdate","_s","totalScore","setTotalScore","currentPoints","setCurrentPoints","pointGain","setPointGain","showPointGain","setShowPointGain","accuracy","setAccuracy","frameCount","setFrameCount","totalScoreRef","sendPoseForScoring","console","log","kp","length","response","post","live_pose","points_earned","similarity","message","data","newTotalScore","current","prev","newFrameCount","newAccuracy","Math","round","setTimeout","toFixed","error","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vaishnavichakka/tempProj/frontend/src/components/RealtimeScorer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport './RealtimeScorer.css';\n\nconst RealtimeScorer = ({ isGameStarted, poseData, onScoreUpdate }) => {\n  const [totalScore, setTotalScore] = useState(0);\n  const [currentPoints, setCurrentPoints] = useState(0);\n  const [pointGain, setPointGain] = useState(null);\n  const [showPointGain, setShowPointGain] = useState(false);\n  const [accuracy, setAccuracy] = useState(0);\n  const [frameCount, setFrameCount] = useState(0);\n  const totalScoreRef = useRef(0);\n\n  // Send pose data to backend for scoring every 0.5 seconds\n  const sendPoseForScoring = useCallback(async (poseData) => {\n    if (!isGameStarted || !poseData) {\n      console.log('❌ Not sending pose - game not started or no pose data');\n      return;\n    }\n\n    console.log(`📊 Sending pose for scoring: ${poseData.kp.length} landmarks`);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/compare-pose', {\n        live_pose: poseData\n      });\n      const { points_earned, similarity, message } = response.data;\n      \n      console.log('🎯 API Response:', response.data);\n      \n      // Update scores\n      setCurrentPoints(points_earned);\n      const newTotalScore = totalScoreRef.current + points_earned;\n      totalScoreRef.current = newTotalScore;\n      setTotalScore(newTotalScore);\n      \n      // Update frame count and calculate accuracy\n      setFrameCount(prev => {\n        const newFrameCount = prev + 1;\n        const newAccuracy = newFrameCount > 0 ? newTotalScore / newFrameCount : points_earned;\n        setAccuracy(Math.round(newAccuracy));\n        return newFrameCount;\n      });\n      \n      // Update parent component with current total score\n      if (onScoreUpdate) {\n        onScoreUpdate(newTotalScore);\n      }\n      \n      // Show point gain animation\n      if (points_earned > 0) {\n        setPointGain(points_earned);\n        setShowPointGain(true);\n        \n        // Hide point gain after animation\n        setTimeout(() => {\n          setShowPointGain(false);\n        }, 1000);\n      }\n      \n      console.log(`🎯 Score: ${points_earned} points (${similarity.toFixed(1)}% similarity) - ${message}`);\n      \n    } catch (error) {\n      console.error('❌ Error scoring pose:', error);\n    }\n  }, [isGameStarted, onScoreUpdate]);\n\n  // Process pose data when it changes - use interval for continuous scoring\n  useEffect(() => {\n    console.log('🔄 RealtimeScorer useEffect triggered:', { poseData: !!poseData, isGameStarted });\n    if (poseData && isGameStarted) {\n      console.log('🎯 Starting scoring interval...');\n      // Send pose for scoring every 0.5 seconds\n      const interval = setInterval(() => {\n        sendPoseForScoring(poseData);\n      }, 500);\n\n      return () => {\n        console.log('🛑 Clearing scoring interval');\n        clearInterval(interval);\n      };\n    }\n  }, [poseData, isGameStarted, sendPoseForScoring]);\n\n  // Reset scores when game resets\n  useEffect(() => {\n    if (!isGameStarted) {\n      setTotalScore(0);\n      setCurrentPoints(0);\n      setPointGain(null);\n      setShowPointGain(false);\n      setAccuracy(0);\n      setFrameCount(0);\n      totalScoreRef.current = 0;\n    }\n  }, [isGameStarted]);\n\n  return (\n    <div className=\"realtime-scorer\">\n      <div className=\"score-display\">\n        <div className=\"total-score\">\n          <div className=\"score-label\">Total Score</div>\n          <div className=\"score-value\">{totalScore}</div>\n        </div>\n        \n        <div className=\"current-score\">\n          <div className=\"score-label\">Current</div>\n          <div className=\"score-value\">{currentPoints}</div>\n        </div>\n        \n        <div className=\"accuracy\">\n          <div className=\"score-label\">Accuracy</div>\n          <div className=\"score-value\">{accuracy}%</div>\n        </div>\n      </div>\n\n      {/* Point Gain Animation */}\n      {showPointGain && pointGain > 0 && (\n        <div className=\"point-gain-animation\">\n          <div className=\"point-gain-text\">\n            +{pointGain}\n          </div>\n        </div>\n      )}\n\n      <div className=\"scoring-info\">\n        <p>🎯 Real-time pose scoring active</p>\n        <p>💃 Follow the reference video closely!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default RealtimeScorer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}