{"ast":null,"code":"import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { createSelectorEffect } from '../utils/create-dom-effect.mjs';\nimport { createEffect } from '../utils/create-effect.mjs';\nfunction canSetAsProperty(element, name) {\n  if (!(name in element)) return false;\n  const descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(element), name) || Object.getOwnPropertyDescriptor(element, name);\n  // Check if it has a setter\n  return descriptor && typeof descriptor.set === \"function\";\n}\nconst addAttrValue = (element, state, key, value) => {\n  const isProp = canSetAsProperty(element, key);\n  const name = isProp ? key : key.startsWith(\"data\") || key.startsWith(\"aria\") ? camelToDash(key) : key;\n  /**\n   * Set attribute directly via property if available\n   */\n  const render = isProp ? () => {\n    element[name] = state.latest[key];\n  } : () => {\n    const v = state.latest[key];\n    if (v === null || v === undefined) {\n      element.removeAttribute(name);\n    } else {\n      element.setAttribute(name, String(v));\n    }\n  };\n  return state.set(key, value, render);\n};\nconst attrEffect = /*@__PURE__*/createSelectorEffect(/*@__PURE__*/createEffect(addAttrValue));\nexport { addAttrValue, attrEffect };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}