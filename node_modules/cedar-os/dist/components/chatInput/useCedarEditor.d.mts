import { Editor } from '@tiptap/react';
import { a9 as SendMessageParams } from '../../index-XdHpD8cC.mjs';
import 'zustand';
import 'zod';
import '../../store/agentContext/AgentContextTypes.mjs';
import 'react';
import '@tiptap/core';
import '../../store/spellSlice/SpellTypes.mjs';
import 'fast-json-patch';
import '../../store/toolsSlice/ToolsTypes.mjs';

interface UseCedarEditorOptions {
    placeholder?: string;
    onSubmit?: (text: string, editor?: Editor, clearEditor?: () => void) => void;
    onFocus?: () => void;
    onBlur?: () => void;
    stream?: boolean;
    sendMessageParams?: Partial<SendMessageParams>;
    /** Optional callback that can override Enter key behavior. Return true to prevent default editor Enter handling. */
    onEnterOverride?: (event: KeyboardEvent) => boolean;
}
declare const useCedarEditor: (options?: UseCedarEditorOptions) => {
    editor: Editor | null;
    isEditorEmpty: boolean;
    handleSubmit: () => Promise<void>;
    getEditorText: () => string;
};

export { useCedarEditor };
