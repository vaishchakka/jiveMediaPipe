import { Editor, Range } from '@tiptap/core';
import { MentionItem } from '../../store/agentContext/AgentContextTypes.js';
import { MentionNodeAttrs } from '@tiptap/extension-mention';
import 'react';
import 'zod';

interface SuggestionProps<I> {
    editor: Editor;
    range: Range;
    query: string;
    text: string;
    items: I[];
    command: (props: I) => void;
    decorationNode: Element | null;
    clientRect?: (() => DOMRect | null) | null;
}
interface SuggestionKeyDownProps {
    event: KeyboardEvent;
    range: Range;
}
declare const mentionSuggestion: {
    items: ({ query }: {
        query: string;
    }) => Promise<(MentionItem & {
        providerId: string;
    })[]>;
    render: () => {
        onStart: (props: SuggestionProps<MentionItem & {
            providerId: string;
        }>) => void;
        onUpdate(props: SuggestionProps<MentionItem & {
            providerId: string;
        }>): void;
        onKeyDown(props: SuggestionKeyDownProps): boolean;
        onExit(): void;
    };
    command: ({ editor, range, props, }: {
        editor: Editor;
        range: Range;
        props: MentionNodeAttrs & {
            providerId?: string;
        };
    }) => void;
};

export { mentionSuggestion as default };
