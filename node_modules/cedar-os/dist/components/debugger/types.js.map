{"version":3,"sources":["../../../src/components/debugger/types.ts"],"sourcesContent":["// Shared types for debugger components\nimport type { registeredState } from '@/store/stateSlice/stateSlice';\n\nexport interface DebugLogEntry {\n\tid: string;\n\ttimestamp: Date;\n\ttype:\n\t\t| 'request'\n\t\t| 'response'\n\t\t| 'error'\n\t\t| 'stream-complete'\n\t\t| 'stream-error'\n\t\t| 'handler';\n\tprovider?: string;\n\tapiRoute?: string;\n\tprocessorName?: string; // Name of the response processor that handled this\n\tdata: {\n\t\tparams?: Record<string, unknown>;\n\t\tresponse?: Record<string, unknown>;\n\t\terror?: Error;\n\t\tstreamContent?: string;\n\t\tstreamObjects?: object[];\n\t\tcompletedItems?: (string | object)[];\n\t\thandledObject?: Record<string, unknown>; // For handler logs\n\t\thandlers?: Array<{\n\t\t\tprocessorName: string;\n\t\t\thandledObject: Record<string, unknown>;\n\t\t}>; // For tracking handlers within a request/stream\n\t};\n\tduration?: number;\n}\n\nexport interface Message {\n\tid: string;\n\trole: 'user' | 'assistant' | 'bot';\n\ttype: string;\n\tcontent?: string;\n\ttimestamp?: string;\n\tcreatedAt?: string;\n\tthreadId?: string;\n\t[key: string]: unknown;\n}\n\nexport interface Badge {\n\tlabel: string;\n\tcolor: 'gray' | 'blue' | 'green' | 'purple' | 'red' | 'yellow' | 'amber';\n}\n\nexport interface CollapsibleSectionProps {\n\tid: string;\n\ttitle: string;\n\tisExpanded: boolean;\n\tonToggle: () => void;\n\tbadges: Badge[];\n\tchildren: React.ReactNode;\n}\n\nexport interface TabProps {\n\tonCopy: (text: string, id: string) => void;\n\tcopiedId: string | null;\n}\n\nexport interface NetworkTabProps extends TabProps {\n\tlogs: DebugLogEntry[];\n}\n\nexport interface MessagesTabProps extends TabProps {\n\tmessages: Message[];\n}\n\nexport interface StatesTabProps extends TabProps {\n\tstates: Record<string, registeredState>;\n\tdiffStates?: Record<string, any>; // DiffHistoryState from cedar-os\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}