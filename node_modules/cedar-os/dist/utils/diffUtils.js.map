{"version":3,"sources":["../../src/utils/diffUtils.ts"],"sourcesContent":["/**\n * Adds an item to an array immutably.\n * @param arr The original array (may be undefined or null).\n * @param item The item to add.\n * @returns A new array containing all original items and the new item.\n */\nexport function addToArray<T>(arr: T[] | null | undefined, item: T): T[] {\n\treturn arr ? [...arr, item] : [item];\n}\n\n/**\n * Adds or updates a key/value pair in an object immutably.\n * @param obj The original object (may be undefined or null).\n * @param key The key to add or update.\n * @param value The value to assign.\n * @returns A new object with the key/value merged.\n */\nexport function addToObject<T extends Record<string, any>, K extends string, V>(\n\tobj: T | null | undefined,\n\tkey: K,\n\tvalue: V\n): T & Record<K, V> {\n\treturn {\n\t\t...(obj || {}),\n\t\t[key]: value,\n\t} as T & Record<K, V>;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMO,SAAS,WAAc,KAA6B,MAAc;AACxE,SAAO,MAAM,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,IAAI;AACpC;AASO,SAAS,YACf,KACA,KACA,OACmB;AACnB,SAAO;AAAA,IACN,GAAI,OAAO,CAAC;AAAA,IACZ,CAAC,GAAG,GAAG;AAAA,EACR;AACD;","names":[]}