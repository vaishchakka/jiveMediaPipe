// src/store/spellSlice/SpellTypes.ts
var Hotkey = /* @__PURE__ */ ((Hotkey2) => {
  Hotkey2["A"] = "a";
  Hotkey2["B"] = "b";
  Hotkey2["C"] = "c";
  Hotkey2["D"] = "d";
  Hotkey2["E"] = "e";
  Hotkey2["F"] = "f";
  Hotkey2["G"] = "g";
  Hotkey2["H"] = "h";
  Hotkey2["I"] = "i";
  Hotkey2["J"] = "j";
  Hotkey2["K"] = "k";
  Hotkey2["L"] = "l";
  Hotkey2["M"] = "m";
  Hotkey2["N"] = "n";
  Hotkey2["O"] = "o";
  Hotkey2["P"] = "p";
  Hotkey2["Q"] = "q";
  Hotkey2["R"] = "r";
  Hotkey2["S"] = "s";
  Hotkey2["T"] = "t";
  Hotkey2["U"] = "u";
  Hotkey2["V"] = "v";
  Hotkey2["W"] = "w";
  Hotkey2["X"] = "x";
  Hotkey2["Y"] = "y";
  Hotkey2["Z"] = "z";
  Hotkey2["F1"] = "f1";
  Hotkey2["F2"] = "f2";
  Hotkey2["F3"] = "f3";
  Hotkey2["F4"] = "f4";
  Hotkey2["F5"] = "f5";
  Hotkey2["F6"] = "f6";
  Hotkey2["F7"] = "f7";
  Hotkey2["F8"] = "f8";
  Hotkey2["F9"] = "f9";
  Hotkey2["F10"] = "f10";
  Hotkey2["F11"] = "f11";
  Hotkey2["F12"] = "f12";
  Hotkey2["ESCAPE"] = "escape";
  Hotkey2["ENTER"] = "enter";
  Hotkey2["SPACE"] = "space";
  Hotkey2["TAB"] = "tab";
  Hotkey2["DELETE"] = "delete";
  Hotkey2["BACKSPACE"] = "backspace";
  Hotkey2["ARROW_UP"] = "arrowup";
  Hotkey2["ARROW_DOWN"] = "arrowdown";
  Hotkey2["ARROW_LEFT"] = "arrowleft";
  Hotkey2["ARROW_RIGHT"] = "arrowright";
  Hotkey2["CTRL"] = "ctrl";
  Hotkey2["CMD"] = "cmd";
  Hotkey2["META"] = "meta";
  Hotkey2["ALT"] = "alt";
  Hotkey2["SHIFT"] = "shift";
  return Hotkey2;
})(Hotkey || {});
var MouseEvent = /* @__PURE__ */ ((MouseEvent2) => {
  MouseEvent2["RIGHT_CLICK"] = "right-click";
  MouseEvent2["DOUBLE_CLICK"] = "double-click";
  MouseEvent2["MIDDLE_CLICK"] = "middle-click";
  MouseEvent2["MOUSE_SCROLL"] = "mouse-scroll";
  MouseEvent2["SHIFT_CLICK"] = "shift+click";
  MouseEvent2["CTRL_CLICK"] = "ctrl+click";
  MouseEvent2["CMD_CLICK"] = "cmd+click";
  MouseEvent2["ALT_CLICK"] = "alt+click";
  return MouseEvent2;
})(MouseEvent || {});
var SelectionEvent = /* @__PURE__ */ ((SelectionEvent2) => {
  SelectionEvent2["TEXT_SELECT"] = "text-select";
  return SelectionEvent2;
})(SelectionEvent || {});
var ActivationMode = /* @__PURE__ */ ((ActivationMode2) => {
  ActivationMode2["TOGGLE"] = "toggle";
  ActivationMode2["HOLD"] = "hold";
  ActivationMode2["TRIGGER"] = "trigger";
  return ActivationMode2;
})(ActivationMode || {});
export {
  ActivationMode,
  Hotkey,
  MouseEvent,
  SelectionEvent
};
//# sourceMappingURL=SpellTypes.mjs.map