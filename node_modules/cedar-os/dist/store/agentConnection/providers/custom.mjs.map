{"version":3,"sources":["../../../../src/store/agentConnection/providers/custom.ts"],"sourcesContent":["import type {\n\tCustomParams,\n\tProviderImplementation,\n\tInferProviderConfig,\n} from '@/store/agentConnection/AgentConnectionTypes';\n\ntype CustomConfig = InferProviderConfig<'custom'>;\n\n// Custom provider implementation that uses the functions provided in the config\nexport const customProvider: ProviderImplementation<\n\tCustomParams,\n\tCustomConfig\n> = {\n\tcallLLM: async (params, config) => {\n\t\t// Use the callLLM function from the config\n\t\tif (config.config.callLLM) {\n\t\t\treturn await config.config.callLLM(params, config);\n\t\t}\n\n\t\tthrow new Error('Custom provider requires a callLLM function in config');\n\t},\n\n\tcallLLMStructured: async (params, config) => {\n\t\t// Use the callLLMStructured function from the config\n\t\tif (config.config.callLLMStructured) {\n\t\t\treturn await config.config.callLLMStructured(params, config);\n\t\t}\n\n\t\t// Fallback to regular callLLM if structured version not provided\n\t\tif (config.config.callLLM) {\n\t\t\treturn await config.config.callLLM(params, config);\n\t\t}\n\n\t\tthrow new Error(\n\t\t\t'Custom provider requires a callLLMStructured function or callLLM function in config'\n\t\t);\n\t},\n\n\tstreamLLM: (params, config, handler) => {\n\t\t// Use the streamLLM function from the config\n\t\tif (config.config.streamLLM) {\n\t\t\treturn config.config.streamLLM(params, config, handler);\n\t\t}\n\n\t\t// Fallback to non-streaming callLLM\n\t\tif (config.config.callLLM) {\n\t\t\tconst abortController = new AbortController();\n\n\t\t\tconst completion = (async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await config.config.callLLM!(params, config);\n\t\t\t\t\thandler({ type: 'chunk', content: response.content || '' });\n\t\t\t\t\thandler({ type: 'done', completedItems: [response.content || ''] });\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandler({ type: 'error', error: error as Error });\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\treturn {\n\t\t\t\tabort: () => abortController.abort(),\n\t\t\t\tcompletion,\n\t\t\t};\n\t\t}\n\n\t\tthrow new Error(\n\t\t\t'Custom provider requires a streamLLM function or callLLM function in config'\n\t\t);\n\t},\n\n\tvoiceLLM: async (params, config) => {\n\t\t// Use the voiceLLM function from the config if available\n\t\tif (config.config.voiceLLM) {\n\t\t\treturn await config.config.voiceLLM(params, config);\n\t\t}\n\n\t\t// Default implementation - return empty response\n\t\treturn {\n\t\t\tcontent: '',\n\t\t};\n\t},\n\n\thandleResponse: async (response) => {\n\t\t// Default response handler - custom providers should handle responses in their own functions\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\n\t\t}\n\n\t\tconst data = await response.json();\n\t\treturn {\n\t\t\tcontent: data.content || data.message || '',\n\t\t\tusage: data.usage,\n\t\t\tmetadata: data.metadata || {},\n\t\t};\n\t},\n};\n"],"mappings":";AASO,IAAM,iBAGT;AAAA,EACH,SAAS,OAAO,QAAQ,WAAW;AAElC,QAAI,OAAO,OAAO,SAAS;AAC1B,aAAO,MAAM,OAAO,OAAO,QAAQ,QAAQ,MAAM;AAAA,IAClD;AAEA,UAAM,IAAI,MAAM,uDAAuD;AAAA,EACxE;AAAA,EAEA,mBAAmB,OAAO,QAAQ,WAAW;AAE5C,QAAI,OAAO,OAAO,mBAAmB;AACpC,aAAO,MAAM,OAAO,OAAO,kBAAkB,QAAQ,MAAM;AAAA,IAC5D;AAGA,QAAI,OAAO,OAAO,SAAS;AAC1B,aAAO,MAAM,OAAO,OAAO,QAAQ,QAAQ,MAAM;AAAA,IAClD;AAEA,UAAM,IAAI;AAAA,MACT;AAAA,IACD;AAAA,EACD;AAAA,EAEA,WAAW,CAAC,QAAQ,QAAQ,YAAY;AAEvC,QAAI,OAAO,OAAO,WAAW;AAC5B,aAAO,OAAO,OAAO,UAAU,QAAQ,QAAQ,OAAO;AAAA,IACvD;AAGA,QAAI,OAAO,OAAO,SAAS;AAC1B,YAAM,kBAAkB,IAAI,gBAAgB;AAE5C,YAAM,cAAc,YAAY;AAC/B,YAAI;AACH,gBAAM,WAAW,MAAM,OAAO,OAAO,QAAS,QAAQ,MAAM;AAC5D,kBAAQ,EAAE,MAAM,SAAS,SAAS,SAAS,WAAW,GAAG,CAAC;AAC1D,kBAAQ,EAAE,MAAM,QAAQ,gBAAgB,CAAC,SAAS,WAAW,EAAE,EAAE,CAAC;AAAA,QACnE,SAAS,OAAO;AACf,kBAAQ,EAAE,MAAM,SAAS,MAAsB,CAAC;AAAA,QACjD;AAAA,MACD,GAAG;AAEH,aAAO;AAAA,QACN,OAAO,MAAM,gBAAgB,MAAM;AAAA,QACnC;AAAA,MACD;AAAA,IACD;AAEA,UAAM,IAAI;AAAA,MACT;AAAA,IACD;AAAA,EACD;AAAA,EAEA,UAAU,OAAO,QAAQ,WAAW;AAEnC,QAAI,OAAO,OAAO,UAAU;AAC3B,aAAO,MAAM,OAAO,OAAO,SAAS,QAAQ,MAAM;AAAA,IACnD;AAGA,WAAO;AAAA,MACN,SAAS;AAAA,IACV;AAAA,EACD;AAAA,EAEA,gBAAgB,OAAO,aAAa;AAEnC,QAAI,CAAC,SAAS,IAAI;AACjB,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,EAAE;AAAA,IACzD;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,WAAO;AAAA,MACN,SAAS,KAAK,WAAW,KAAK,WAAW;AAAA,MACzC,OAAO,KAAK;AAAA,MACZ,UAAU,KAAK,YAAY,CAAC;AAAA,IAC7B;AAAA,EACD;AACD;","names":[]}