import { HumanInTheLoopResponse } from './humanInTheLoopTypes.mjs';
import { BackendMessageResponse } from './messageResponseProcessor.mjs';
import { SetStateResponse, LegacyActionResponse } from './createResponseProcessor.mjs';
import { a7 as ResponseProcessor, a6 as StructuredResponseType, a8 as ResponseProcessorRegistry } from '../../../index-XdHpD8cC.mjs';
import 'zod';
import 'zustand';
import '../../agentContext/AgentContextTypes.mjs';
import 'react';
import '@tiptap/core';
import '../../spellSlice/SpellTypes.mjs';
import 'fast-json-patch';
import '../../toolsSlice/ToolsTypes.mjs';

/**
 * Default response processors that are automatically registered
 */
declare const defaultResponseProcessors: (ResponseProcessor<StructuredResponseType> | ResponseProcessor<{
    type: "frontendTool";
    toolName: string;
    args?: unknown;
}> | ResponseProcessor<SetStateResponse> | ResponseProcessor<LegacyActionResponse> | ResponseProcessor<BackendMessageResponse> | ResponseProcessor<HumanInTheLoopResponse>)[];
declare const initializeResponseProcessorRegistry: (processors: ResponseProcessor[]) => ResponseProcessorRegistry;

export { defaultResponseProcessors, initializeResponseProcessorRegistry };
