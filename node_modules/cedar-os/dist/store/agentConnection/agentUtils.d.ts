import { a1 as StreamHandler } from '../../index-DGEVvAGh.js';
import 'zustand';
import 'zod';
import '../agentContext/AgentContextTypes.js';
import 'react';
import '@tiptap/core';
import '../spellSlice/SpellTypes.js';
import 'fast-json-patch';
import '../toolsSlice/ToolsTypes.js';

/**
 * Enhanced Server-Sent Events (SSE) stream parser
 *
 * This function handles parsing of streaming responses from various LLM providers:
 * - OpenAI: Uses delta format with choices array
 * - Mastra: Uses custom object types
 * - AI SDK: Uses direct text streaming (handled internally by AI SDK)
 * - Raw text: Plain text chunks
 *
 * Key responsibilities:
 * 1. Parse SSE format (data: content\n\n)
 * 2. Handle mixed text/JSON content streams
 * 3. Accumulate text messages and track completed items
 * 4. Call handler immediately for real-time processing
 * 5. Provide completion summary with all items
 */

/**
 * Main SSE stream handler - processes Server-Sent Events from LLM providers
 *
 * @param response - HTTP Response object with streaming body
 * @param handler - StreamHandler to call for each parsed event (chunk, object, done, error)
 */
declare function handleEventStream(response: Response, handler: StreamHandler): Promise<void>;

export { handleEventStream };
