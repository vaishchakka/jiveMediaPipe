import { ReactNode } from 'react';
import z from 'zod';

interface BackendStateSetterSchema {
    name: string;
    stateKey: string;
    description: string;
    argsSchema?: unknown;
}
interface BackendStateSchema {
    stateKey: string;
    description?: string;
    schema: unknown;
}
interface BackendFrontendToolSchema {
    name: string;
    description?: string;
    argsSchema: Record<string, unknown>;
}
/**
 * Backend Context Entry with proper generic typing
 */
interface BackendContextEntry<TData = unknown> {
    data: TData;
    source: 'mention' | 'subscription' | 'manual' | 'function';
}
/**
 * The transformed backend type - what backends actually receive when parsing the additionalContext field
 */
type AdditionalContextParam<TSchemas extends Record<string, z.ZodTypeAny>> = {
    frontendTools?: Record<string, unknown>;
    stateSetters?: Record<string, unknown>;
    schemas?: Record<string, unknown>;
} & {
    [K in keyof TSchemas]: TSchemas[K] extends z.ZodOptional<z.ZodArray<infer U>> ? BackendContextEntry<z.infer<U>>[] | undefined : TSchemas[K] extends z.ZodArray<infer U> ? BackendContextEntry<z.infer<U>>[] : BackendContextEntry<z.infer<TSchemas[K]>>;
};
/**
 * Represents an entry in the additional context
 */
interface ContextEntry {
    id: string;
    source: 'mention' | 'subscription' | 'manual' | 'function';
    data: any;
    metadata?: {
        label?: string;
        icon?: ReactNode;
        color?: string;
        /** Whether this entry should be shown in the chat UI (ContextBadgeRow). Defaults to true */
        showInChat?: boolean;
        order?: number;
        [key: string]: unknown;
    };
}
/**
 * Additional context structure - supports both single entries and arrays
 */
interface AdditionalContext {
    [key: string]: ContextEntry | ContextEntry[];
}
/**
 * Represents an item in the mention list
 */
interface MentionItem {
    id: string | null;
    label?: string | null;
    data?: unknown;
    metadata?: {
        icon?: ReactNode;
        color?: string;
        /** Whether this mention item should be shown as a badge after insertion (default true) */
        showInChat?: boolean;
        [key: string]: unknown;
    };
    providerId?: string;
}
/**
 * Interface for mention providers
 */
interface MentionProvider {
    id: string;
    trigger: string;
    label?: string;
    description?: string;
    color?: string;
    icon?: ReactNode;
    getItems: (query: string) => MentionItem[] | Promise<MentionItem[]>;
    toContextEntry: (item: MentionItem) => ContextEntry;
    renderMenuItem?: (item: MentionItem) => ReactNode;
    renderEditorItem?: (item: MentionItem, attrs: Record<string, unknown>) => ReactNode;
    renderContextBadge?: (entry: ContextEntry) => ReactNode;
}
/**
 * Configuration for state-based mention providers
 */
interface StateBasedMentionProviderConfig<T> {
    stateKey: string;
    trigger?: string;
    labelField?: string | ((item: T) => string);
    searchFields?: string[];
    description?: string;
    icon?: ReactNode;
    color?: string;
    order?: number;
    renderMenuItem?: (item: MentionItem) => ReactNode;
    renderEditorItem?: (item: MentionItem, attrs: Record<string, unknown>) => ReactNode;
    renderContextBadge?: (entry: ContextEntry) => ReactNode;
}
declare const ContextEntrySchema: z.ZodObject<{
    id: z.ZodString;
    source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
    data: z.ZodUnknown;
    metadata: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodUnknown, z.objectOutputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip">, z.objectInputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip">>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    source: "function" | "mention" | "subscription" | "manual";
    data?: unknown;
    metadata?: z.objectOutputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip"> | undefined;
}, {
    id: string;
    source: "function" | "mention" | "subscription" | "manual";
    data?: unknown;
    metadata?: z.objectInputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip"> | undefined;
}>;
declare const AdditionalContextSchema: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodObject<{
    id: z.ZodString;
    source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
    data: z.ZodUnknown;
    metadata: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodUnknown, z.objectOutputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip">, z.objectInputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip">>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    source: "function" | "mention" | "subscription" | "manual";
    data?: unknown;
    metadata?: z.objectOutputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip"> | undefined;
}, {
    id: string;
    source: "function" | "mention" | "subscription" | "manual";
    data?: unknown;
    metadata?: z.objectInputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip"> | undefined;
}>, z.ZodArray<z.ZodObject<{
    id: z.ZodString;
    source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
    data: z.ZodUnknown;
    metadata: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodUnknown, z.objectOutputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip">, z.objectInputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip">>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    source: "function" | "mention" | "subscription" | "manual";
    data?: unknown;
    metadata?: z.objectOutputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip"> | undefined;
}, {
    id: string;
    source: "function" | "mention" | "subscription" | "manual";
    data?: unknown;
    metadata?: z.objectInputType<{
        label: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodUnknown>;
        color: z.ZodOptional<z.ZodString>;
        showInChat: z.ZodOptional<z.ZodBoolean>;
        order: z.ZodOptional<z.ZodNumber>;
    }, z.ZodUnknown, "strip"> | undefined;
}>, "many">]>>;
declare const createChatRequestSchema: <T extends z.ZodTypeAny = typeof AdditionalContextSchema>(additionalContextSchema?: T) => z.ZodObject<{
    message: z.ZodString;
    systemPrompt: z.ZodOptional<z.ZodString>;
    temperature: z.ZodOptional<z.ZodNumber>;
    maxTokens: z.ZodOptional<z.ZodNumber>;
    stream: z.ZodOptional<z.ZodBoolean>;
    additionalContext: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, "many">]>>> | z.ZodOptional<T>;
}, "strip", z.ZodTypeAny, z.objectUtil.addQuestionMarks<z.baseObjectOutputType<{
    message: z.ZodString;
    systemPrompt: z.ZodOptional<z.ZodString>;
    temperature: z.ZodOptional<z.ZodNumber>;
    maxTokens: z.ZodOptional<z.ZodNumber>;
    stream: z.ZodOptional<z.ZodBoolean>;
    additionalContext: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, "many">]>>> | z.ZodOptional<T>;
}>, any> extends infer T_1 ? { [k in keyof T_1]: z.objectUtil.addQuestionMarks<z.baseObjectOutputType<{
    message: z.ZodString;
    systemPrompt: z.ZodOptional<z.ZodString>;
    temperature: z.ZodOptional<z.ZodNumber>;
    maxTokens: z.ZodOptional<z.ZodNumber>;
    stream: z.ZodOptional<z.ZodBoolean>;
    additionalContext: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, "many">]>>> | z.ZodOptional<T>;
}>, any>[k]; } : never, z.baseObjectInputType<{
    message: z.ZodString;
    systemPrompt: z.ZodOptional<z.ZodString>;
    temperature: z.ZodOptional<z.ZodNumber>;
    maxTokens: z.ZodOptional<z.ZodNumber>;
    stream: z.ZodOptional<z.ZodBoolean>;
    additionalContext: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, "many">]>>> | z.ZodOptional<T>;
}> extends infer T_2 ? { [k_1 in keyof T_2]: z.baseObjectInputType<{
    message: z.ZodString;
    systemPrompt: z.ZodOptional<z.ZodString>;
    temperature: z.ZodOptional<z.ZodNumber>;
    maxTokens: z.ZodOptional<z.ZodNumber>;
    stream: z.ZodOptional<z.ZodBoolean>;
    additionalContext: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, "many">]>>> | z.ZodOptional<T>;
}>[k_1]; } : never>;
declare const ChatRequestSchema: z.ZodObject<{
    message: z.ZodString;
    systemPrompt: z.ZodOptional<z.ZodString>;
    temperature: z.ZodOptional<z.ZodNumber>;
    maxTokens: z.ZodOptional<z.ZodNumber>;
    stream: z.ZodOptional<z.ZodBoolean>;
    additionalContext: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        source: z.ZodEnum<["mention", "subscription", "manual", "function"]>;
        data: z.ZodUnknown;
        metadata: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip">>>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }>, "many">]>>>;
}, "strip", z.ZodTypeAny, {
    message: string;
    systemPrompt?: string | undefined;
    temperature?: number | undefined;
    maxTokens?: number | undefined;
    stream?: boolean | undefined;
    additionalContext?: Record<string, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    } | {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectOutputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }[]> | undefined;
}, {
    message: string;
    systemPrompt?: string | undefined;
    temperature?: number | undefined;
    maxTokens?: number | undefined;
    stream?: boolean | undefined;
    additionalContext?: Record<string, {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    } | {
        id: string;
        source: "function" | "mention" | "subscription" | "manual";
        data?: unknown;
        metadata?: z.objectInputType<{
            label: z.ZodOptional<z.ZodString>;
            icon: z.ZodOptional<z.ZodUnknown>;
            color: z.ZodOptional<z.ZodString>;
            showInChat: z.ZodOptional<z.ZodBoolean>;
            order: z.ZodOptional<z.ZodNumber>;
        }, z.ZodUnknown, "strip"> | undefined;
    }[]> | undefined;
}>;
declare const ChatResponseSchema: z.ZodObject<{
    content: z.ZodString;
    usage: z.ZodOptional<z.ZodObject<{
        promptTokens: z.ZodNumber;
        completionTokens: z.ZodNumber;
        totalTokens: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        promptTokens: number;
        completionTokens: number;
        totalTokens: number;
    }, {
        promptTokens: number;
        completionTokens: number;
        totalTokens: number;
    }>>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    object: z.ZodOptional<z.ZodUnion<[z.ZodRecord<z.ZodString, z.ZodUnknown>, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnknown>, "many">]>>;
}, "strip", z.ZodTypeAny, {
    content: string;
    object?: Record<string, unknown> | Record<string, unknown>[] | undefined;
    metadata?: Record<string, unknown> | undefined;
    usage?: {
        promptTokens: number;
        completionTokens: number;
        totalTokens: number;
    } | undefined;
}, {
    content: string;
    object?: Record<string, unknown> | Record<string, unknown>[] | undefined;
    metadata?: Record<string, unknown> | undefined;
    usage?: {
        promptTokens: number;
        completionTokens: number;
        totalTokens: number;
    } | undefined;
}>;
/**
 * AdditionalContextParam that the backend receives (factory function)
 */
declare function AdditionalContextParamSchema<TSchemas extends Record<string, z.ZodTypeAny>>(dataSchemas: TSchemas): z.ZodObject<Record<string, z.ZodTypeAny>, "strip", z.ZodTypeAny, {
    [x: string]: any;
}, {
    [x: string]: any;
}>;

export { type AdditionalContext, type AdditionalContextParam, AdditionalContextParamSchema, AdditionalContextSchema, type BackendContextEntry, type BackendFrontendToolSchema, type BackendStateSchema, type BackendStateSetterSchema, ChatRequestSchema, ChatResponseSchema, type ContextEntry, ContextEntrySchema, type MentionItem, type MentionProvider, type StateBasedMentionProviderConfig, createChatRequestSchema };
