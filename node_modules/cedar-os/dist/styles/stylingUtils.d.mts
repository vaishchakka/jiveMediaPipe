import { ClassValue } from 'clsx';
import { ReactNode } from 'react';

declare const luminanceThreshold = 0.412;
/**
 * Detects if dark mode is currently active
 * Checks for Tailwind's dark class on the document element
 */
declare function isDarkMode(): boolean;
/**
 * Combines class names with Tailwind's merge utility
 */
declare function cn(...inputs: ClassValue[]): string;
declare const hexToRgb: (hex: string) => {
    r: number;
    g: number;
    b: number;
};
declare const getShadedColor: (hex: string, shade: number) => string;
declare const getLightenedColor: (hex: string, lighten: number) => string;
/**
 * Creates a border color based on the background color
 * @param color - The background color in hex format
 */
declare function createBorderColor(color: string): string;
/**
 * Determines if a color is light or dark
 * @param color - The color in hex format
 */
declare function isLightColor(color: string): boolean;
/**
 * Calculates appropriate text color (black or white) based on background color contrast
 * @param backgroundColor - Hex color code (with or without #)
 * @param secondary - Optional parameter to get a muted version of the text color for descriptions
 * @returns '#ffffff' for white or '#000000' for black
 */
declare const getTextColorForBackground: (backgroundColor: string, secondary?: boolean) => string;
/**
 * Adds className to a React element if it's a valid element
 * Otherwise returns the node as-is
 */
declare function withClassName(node: ReactNode, className: string): ReactNode;
declare const desaturateColor: (color: string) => string;
/**
 * Calculates appropriate text color (black or white) based on background color contrast
 * @param backgroundColor - Hex color code (with or without #)
 * @returns '#ffffff' for white or '#000000' for black
 */
declare const getThemeFromBackground: (backgroundColor: string) => string;

export { cn, createBorderColor, desaturateColor, getLightenedColor, getShadedColor, getTextColorForBackground, getThemeFromBackground, hexToRgb, isDarkMode, isLightColor, luminanceThreshold, withClassName };
