import{resolveElements as t}from"motion-dom";import{invariant as e}from"motion-utils";function n(t,e){const n=document.createElement("span");return t&&(n.className=t),void 0!==e&&(n.dataset.index=e.toString()),n.style.display="inline-block",n}function o(t,e,o,s){const l=n(o,s);return l.textContent=e,t.appendChild(l),l}function s(s,{splitBy:l=" ",charClass:i="split-char",wordClass:p="split-word",lineClass:r="split-line"}={}){const[c]=t(s);e(Boolean(c),"Element not found");const a=c.textContent||"";c.setAttribute("aria-label",a),c.textContent="";const d={chars:[],words:[],lines:[]},h=a.split(l),u=[],m=[];for(let t=0;t<h.length;t++){const e=h[t],s=n(p,t);d.words.push(s),u.push(s);const r=Array.from(e);for(let t=0;t<r.length;t++){const e=o(s,r[t],i,t);d.chars.push(e)}if(c.appendChild(s),t<h.length-1)if(" "===l){const t=document.createTextNode(" ");c.appendChild(t),m.push(t)}else{const t=o(s,l,`${i}-delimiter`);d.chars.push(t)}}const f=u.map((t,e)=>({element:t,top:t.offsetTop,index:e,spacer:e<m.length?m[e]:null})),C=[];let x=[],g=f[0]?.top??0,y=0;for(let t=0;t<f.length;t++){const{element:e,top:n,spacer:o}=f[t];n>g&&x.length>0&&(C.push({elements:x,lineIndex:y++}),x=[],g=n),x.push(e),o&&x.push(o)}x.length>0&&C.push({elements:x,lineIndex:y}),c.textContent="";for(const{elements:t,lineIndex:e}of C){const o=n(r,e);o.style.display="inline-block",d.lines.push(o);for(const e of t)o.appendChild(e);c.appendChild(o)}return d}export{s as splitText};
